/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockFheOps,
  MockFheOpsInterface,
} from "../../../contracts/MockFheOps.sol/MockFheOps";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "and",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "boolToBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "toType",
        type: "uint8",
      },
    ],
    name: "cast",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "decrypt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "div",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "eq",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    name: "getNetworkPublicKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "gt",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "gte",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "log",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "lt",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "lte",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "max",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
    ],
    name: "maxValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "min",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "mul",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "ne",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "not",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "or",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    name: "random",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "rem",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "req",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "ctHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "sealOutput",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "controlHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "ifTrueHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "ifFalseHash",
        type: "bytes",
      },
    ],
    name: "select",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "shl",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "shr",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "sub",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "toType",
        type: "uint8",
      },
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    name: "trivialEncrypt",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "uint256ToBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "utype",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "lhsHash",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "rhsHash",
        type: "bytes",
      },
    ],
    name: "xor",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612006806100206000396000f3fe608060405234801561001057600080fd5b50600436106101ef5760003560e01c8063874b1c101161010f578063b9c7a54b116100a2578063cc2cbeff11610071578063cc2cbeff14610720578063d260d9ab14610750578063eb274b7714610780578063eb376804146107b0576101ef565b8063b9c7a54b14610660578063ba19ac2814610690578063c2d96952146106c0578063c7559da4146106f0576101ef565b8063aa626e8a116100de578063aa626e8a146105a0578063ae104cfd146105d0578063ae42450a14610600578063b8fa104314610630576101ef565b8063874b1c10146104e057806392348b34146105105780639944d12d14610540578063a1848ff314610570576101ef565b80634a5a111711610187578063650de1cf11610156578063650de1cf1461042057806372d456f5146104505780637c4697ab146104805780637d23f1db146104b0576101ef565b80634a5a1117146103605780635211c6791461039057806355e5e6c5146103c05780635e639f19146103f0576101ef565b80631f4cda2f116101c35780631f4cda2f146102b457806321b50ba3146102e457806341304fac146103145780634284f76514610330576101ef565b80622df619146101f45780630b80518e1461022457806313c0c9ae146102545780631b1b484e14610284575b600080fd5b61020e60048036038101906102099190611425565b6107e0565b60405161021b919061152f565b60405180910390f35b61023e60048036038101906102399190611425565b610828565b60405161024b919061152f565b60405180910390f35b61026e60048036038101906102699190611425565b610889565b60405161027b919061152f565b60405180910390f35b61029e6004803603810190610299919061158a565b6108dc565b6040516102ab919061152f565b60405180910390f35b6102ce60048036038101906102c99190611425565b610904565b6040516102db919061152f565b60405180910390f35b6102fe60048036038101906102f991906115b7565b61094c565b60405161030b919061152f565b60405180910390f35b61032e600480360381019061032991906116c7565b610958565b005b61034a60048036038101906103459190611425565b61095b565b604051610357919061152f565b60405180910390f35b61037a60048036038101906103759190611710565b6109a3565b604051610387919061152f565b60405180910390f35b6103aa60048036038101906103a59190611425565b6109c7565b6040516103b7919061152f565b60405180910390f35b6103da60048036038101906103d5919061177f565b610a28565b6040516103e791906117c5565b60405180910390f35b61040a60048036038101906104059190611425565b610b9b565b604051610417919061152f565b60405180910390f35b61043a60048036038101906104359190611425565b610bca565b604051610447919061152f565b60405180910390f35b61046a60048036038101906104659190611425565b610c1d565b604051610477919061152f565b60405180910390f35b61049a6004803603810190610495919061180c565b610c4c565b6040516104a791906117c5565b60405180910390f35b6104ca60048036038101906104c5919061187b565b610c65565b6040516104d7919061152f565b60405180910390f35b6104fa60048036038101906104f59190611425565b610c70565b604051610507919061152f565b60405180910390f35b61052a60048036038101906105259190611425565b610cc2565b604051610537919061152f565b60405180910390f35b61055a60048036038101906105559190611425565b610d14565b604051610567919061152f565b60405180910390f35b61058a60048036038101906105859190611425565b610d4d565b604051610597919061192c565b60405180910390f35b6105ba60048036038101906105b5919061198e565b610d59565b6040516105c7919061152f565b60405180910390f35b6105ea60048036038101906105e59190611425565b610da9565b6040516105f7919061152f565b60405180910390f35b61061a60048036038101906106159190611425565b610dd8565b604051610627919061152f565b60405180910390f35b61064a60048036038101906106459190611a19565b610e11565b604051610657919061152f565b60405180910390f35b61067a60048036038101906106759190611425565b610f0a565b604051610687919061152f565b60405180910390f35b6106aa60048036038101906106a59190611a46565b610f5c565b6040516106b7919061152f565b60405180910390f35b6106da60048036038101906106d59190611ab5565b610f7a565b6040516106e7919061152f565b60405180910390f35b61070a60048036038101906107059190611b70565b610fa5565b604051610717919061152f565b60405180910390f35b61073a60048036038101906107359190611425565b611008565b604051610747919061152f565b60405180910390f35b61076a6004803603810190610765919061187b565b611050565b604051610777919061152f565b60405180910390f35b61079a60048036038101906107959190611425565b611074565b6040516107a7919061152f565b60405180910390f35b6107ca60048036038101906107c59190611425565b6110c7565b6040516107d7919061152f565b60405180910390f35b606060006107ed85610a28565b6107f68461110f565b6107ff8661110f565b6108099190611bcc565b6108139190611c2f565b905061081e81610fa5565b9150509392505050565b6060600061083585610a28565b61083e8461110f565b6108489190611c2f565b61085186610a28565b61085a8661110f565b6108649190611c2f565b10159050600115158115150361087d5783915050610882565b829150505b9392505050565b6060600061089685610a28565b61089f8461110f565b6108a99190611c2f565b6108b286610a28565b6108bb8661110f565b6108c59190611c2f565b141590506108d281610e11565b9150509392505050565b60606000604051806080016040528060418152602001611f9060419139905080915050919050565b6060600061091185610a28565b61091a8461110f565b6109238661110f565b61092d9190611c60565b6109379190611c2f565b905061094281610fa5565b9150509392505050565b60608290509392505050565b50565b6060600061096885610a28565b6109718461110f565b61097a8661110f565b6109849190611c91565b61098e9190611c2f565b905061099981610fa5565b9150509392505050565b60606000836109b190611d0f565b90506109bd81846111eb565b9150509392505050565b606060006109d485610a28565b6109dd8461110f565b6109e79190611c2f565b6109f086610a28565b6109f98661110f565b610a039190611c2f565b101590506001151581151503610a1c5782915050610a21565b839150505b9392505050565b6000806000905060008360ff1603610a5157600160ff8016610a4a9190611bcc565b9050610b92565b60018360ff1603610a7457600161ffff8016610a6d9190611bcc565b9050610b91565b60028360ff1603610a9957600163ffffffff8016610a929190611bcc565b9050610b90565b60038360ff1603610ac257600167ffffffffffffffff8016610abb9190611bcc565b9050610b8f565b60048360ff1603610af35760016fffffffffffffffffffffffffffffffff8016610aec9190611bcc565b9050610b8e565b60058360ff1603610b075760019050610b8d565b600c8360ff1603610b3c57600173ffffffffffffffffffffffffffffffffffffffff8016610b359190611bcc565b9050610b8c565b600d8360ff1603610b505760019050610b8b565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8290611dc2565b60405180910390fd5b5b5b5b5b5b5b5b80915050919050565b6060600082610ba990611d0f565b84610bb390611d0f565b189050610bc081866111eb565b9150509392505050565b60606000610bd785610a28565b610be08461110f565b610bea9190611c2f565b610bf386610a28565b610bfc8661110f565b610c069190611c2f565b10159050610c1381610e11565b9150509392505050565b6060600082610c2b90611d0f565b84610c3590611d0f565b179050610c4281866111eb565b9150509392505050565b600080610c588461110f565b9050809150509392505050565b606081905092915050565b60606000610c7d85610a28565b610c868461110f565b610c909190611c2f565b610c9986610a28565b610ca28661110f565b610cac9190611c2f565b119050610cb881610e11565b9150509392505050565b60606000610ccf85610a28565b610cd88461110f565b610ce29190611c2f565b610ceb86610a28565b610cf48661110f565b610cfe9190611c2f565b149050610d0a81610e11565b9150509392505050565b60606000610d218461110f565b90506000610d2e8461110f565b905060008183901c9050610d4181610fa5565b93505050509392505050565b60608290509392505050565b6060610da0610d6785610a28565b42604051602001610d7891906117c5565b6040516020818303038152906040528051906020012060001c610d9b9190611c2f565b610fa5565b90509392505050565b6060600082610db790611d0f565b84610dc190611d0f565b169050610dce81866111eb565b9150509392505050565b60606000610de58461110f565b90506000610df28461110f565b905060008183901b9050610e0581610fa5565b93505050509392505050565b60606000600167ffffffffffffffff811115610e3057610e2f6112fa565b5b6040519080825280601f01601f191660200182016040528015610e625781602001600182028036833780820191505090505b5090508215610eb857600160f81b81600081518110610e8457610e83611de2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610f01565b600060f81b81600081518110610ed157610ed0611de2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b80915050919050565b60606000610f1785610a28565b610f208461110f565b610f2a9190611c2f565b610f3386610a28565b610f3c8661110f565b610f469190611c2f565b109050610f5281610e11565b9150509392505050565b6060610f7184610f6b90611d0f565b846111eb565b90509392505050565b60606000610f8785611215565b90508015610f985783915050610f9d565b829150505b949350505050565b60606000602067ffffffffffffffff811115610fc457610fc36112fa565b5b6040519080825280601f01601f191660200182016040528015610ff65781602001600182028036833780820191505090505b50905082602082015280915050919050565b6060600061101585610a28565b61101e8461110f565b6110278661110f565b6110319190611e11565b61103b9190611c2f565b905061104681610fa5565b9150509392505050565b606060008261105e90611d0f565b19905061106b81856111eb565b91505092915050565b6060600061108185610a28565b61108a8461110f565b6110949190611c2f565b61109d86610a28565b6110a68661110f565b6110b09190611c2f565b111590506110bd81610e11565b9150509392505050565b606060006110d485610a28565b6110dd8461110f565b6110e68661110f565b6110f09190611c2f565b6110fa9190611c2f565b905061110581610fa5565b9150509392505050565b6000602082511115611156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114d90611e91565b60405180910390fd5b815160206111649190611e11565b67ffffffffffffffff81111561117d5761117c6112fa565b5b6040519080825280601f01601f1916602001820160405280156111af5781602001600182028036833780820191505090505b50826040516020016111c2929190611eed565b6040516020818303038152906040528060200190518101906111e49190611f26565b9050919050565b6060826040516020016111fe9190611f74565b604051602081830303815290604052905092915050565b600060208251111561125c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125390611e91565b60405180910390fd5b60008260008151811061127257611271611de2565b5b602001015160f81c60f81b60f81c905060008160ff161415915050919050565b6000604051905090565b600080fd5b600080fd5b600060ff82169050919050565b6112bc816112a6565b81146112c757600080fd5b50565b6000813590506112d9816112b3565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611332826112e9565b810181811067ffffffffffffffff82111715611351576113506112fa565b5b80604052505050565b6000611364611292565b90506113708282611329565b919050565b600067ffffffffffffffff8211156113905761138f6112fa565b5b611399826112e9565b9050602081019050919050565b82818337600083830152505050565b60006113c86113c384611375565b61135a565b9050828152602081018484840111156113e4576113e36112e4565b5b6113ef8482856113a6565b509392505050565b600082601f83011261140c5761140b6112df565b5b813561141c8482602086016113b5565b91505092915050565b60008060006060848603121561143e5761143d61129c565b5b600061144c868287016112ca565b935050602084013567ffffffffffffffff81111561146d5761146c6112a1565b5b611479868287016113f7565b925050604084013567ffffffffffffffff81111561149a576114996112a1565b5b6114a6868287016113f7565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156114ea5780820151818401526020810190506114cf565b60008484015250505050565b6000611501826114b0565b61150b81856114bb565b935061151b8185602086016114cc565b611524816112e9565b840191505092915050565b6000602082019050818103600083015261154981846114f6565b905092915050565b60008160030b9050919050565b61156781611551565b811461157257600080fd5b50565b6000813590506115848161155e565b92915050565b6000602082840312156115a05761159f61129c565b5b60006115ae84828501611575565b91505092915050565b6000806000606084860312156115d0576115cf61129c565b5b60006115de868287016112ca565b935050602084013567ffffffffffffffff8111156115ff576115fe6112a1565b5b61160b868287016113f7565b925050604061161c86828701611575565b9150509250925092565b600067ffffffffffffffff821115611641576116406112fa565b5b61164a826112e9565b9050602081019050919050565b600061166a61166584611626565b61135a565b905082815260208101848484011115611686576116856112e4565b5b6116918482856113a6565b509392505050565b600082601f8301126116ae576116ad6112df565b5b81356116be848260208601611657565b91505092915050565b6000602082840312156116dd576116dc61129c565b5b600082013567ffffffffffffffff8111156116fb576116fa6112a1565b5b61170784828501611699565b91505092915050565b6000806000606084860312156117295761172861129c565b5b6000611737868287016112ca565b935050602084013567ffffffffffffffff811115611758576117576112a1565b5b611764868287016113f7565b9250506040611775868287016112ca565b9150509250925092565b6000602082840312156117955761179461129c565b5b60006117a3848285016112ca565b91505092915050565b6000819050919050565b6117bf816117ac565b82525050565b60006020820190506117da60008301846117b6565b92915050565b6117e9816117ac565b81146117f457600080fd5b50565b600081359050611806816117e0565b92915050565b6000806000606084860312156118255761182461129c565b5b6000611833868287016112ca565b935050602084013567ffffffffffffffff811115611854576118536112a1565b5b611860868287016113f7565b9250506040611871868287016117f7565b9150509250925092565b600080604083850312156118925761189161129c565b5b60006118a0858286016112ca565b925050602083013567ffffffffffffffff8111156118c1576118c06112a1565b5b6118cd858286016113f7565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60006118fe826118d7565b61190881856118e2565b93506119188185602086016114cc565b611921816112e9565b840191505092915050565b6000602082019050818103600083015261194681846118f3565b905092915050565b600067ffffffffffffffff82169050919050565b61196b8161194e565b811461197657600080fd5b50565b60008135905061198881611962565b92915050565b6000806000606084860312156119a7576119a661129c565b5b60006119b5868287016112ca565b93505060206119c686828701611979565b92505060406119d786828701611575565b9150509250925092565b60008115159050919050565b6119f6816119e1565b8114611a0157600080fd5b50565b600081359050611a13816119ed565b92915050565b600060208284031215611a2f57611a2e61129c565b5b6000611a3d84828501611a04565b91505092915050565b600080600060608486031215611a5f57611a5e61129c565b5b600084013567ffffffffffffffff811115611a7d57611a7c6112a1565b5b611a89868287016113f7565b9350506020611a9a868287016112ca565b9250506040611aab86828701611575565b9150509250925092565b60008060008060808587031215611acf57611ace61129c565b5b6000611add878288016112ca565b945050602085013567ffffffffffffffff811115611afe57611afd6112a1565b5b611b0a878288016113f7565b935050604085013567ffffffffffffffff811115611b2b57611b2a6112a1565b5b611b37878288016113f7565b925050606085013567ffffffffffffffff811115611b5857611b576112a1565b5b611b64878288016113f7565b91505092959194509250565b600060208284031215611b8657611b8561129c565b5b6000611b94848285016117f7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bd7826117ac565b9150611be2836117ac565b9250828201905080821115611bfa57611bf9611b9d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c3a826117ac565b9150611c45836117ac565b925082611c5557611c54611c00565b5b828206905092915050565b6000611c6b826117ac565b9150611c76836117ac565b925082611c8657611c85611c00565b5b828204905092915050565b6000611c9c826117ac565b9150611ca7836117ac565b9250828202611cb5816117ac565b91508282048414831517611ccc57611ccb611b9d565b5b5092915050565b6000819050602082019050919050565b6000819050919050565b6000611cf98251611ce3565b80915050919050565b600082821b905092915050565b6000611d1a826114b0565b82611d2484611cd3565b9050611d2f81611ced565b92506020821015611d6f57611d6a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611d02565b831692505b5050919050565b7f556e737570706f72746564207479706500000000000000000000000000000000600082015250565b6000611dac6010836118e2565b9150611db782611d76565b602082019050919050565b60006020820190508181036000830152611ddb81611d9f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611e1c826117ac565b9150611e27836117ac565b9250828203905081811115611e3f57611e3e611b9d565b5b92915050565b7f4279746573206c656e67746820657863656564732033322e0000000000000000600082015250565b6000611e7b6018836118e2565b9150611e8682611e45565b602082019050919050565b60006020820190508181036000830152611eaa81611e6e565b9050919050565b600081905092915050565b6000611ec7826114b0565b611ed18185611eb1565b9350611ee18185602086016114cc565b80840191505092915050565b6000611ef98285611ebc565b9150611f058284611ebc565b91508190509392505050565b600081519050611f20816117e0565b92915050565b600060208284031215611f3c57611f3b61129c565b5b6000611f4a84828501611f11565b91505092915050565b6000819050919050565b611f6e611f6982611ce3565b611f53565b82525050565b6000611f808284611f5d565b6020820191508190509291505056fe28282d282d5f282d5f2d295f2d292d292920596f75277665207374657070656420696e746f207468652077726f6e67206e65696768626f72686f6f642070616c2ea2646970667358221220832126527d16ce51879a8f2a6ac663b58138b370785f453b5107e9833d52790f64736f6c63430008140033";

type MockFheOpsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockFheOpsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockFheOps__factory extends ContractFactory {
  constructor(...args: MockFheOpsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockFheOps & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockFheOps__factory {
    return super.connect(runner) as MockFheOps__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockFheOpsInterface {
    return new Interface(_abi) as MockFheOpsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockFheOps {
    return new Contract(address, _abi, runner) as unknown as MockFheOps;
  }
}
