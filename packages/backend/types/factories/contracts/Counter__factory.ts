/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Counter, CounterInterface } from "../../contracts/Counter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotMessageSender",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "int32",
            name: "securityZone",
            type: "int32",
          },
        ],
        internalType: "struct inEuint32",
        name: "encryptedValue",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "publicKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Permission",
        name: "permission",
        type: "tuple",
      },
    ],
    name: "getCounterPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "publicKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Permission",
        name: "permission",
        type: "tuple",
      },
    ],
    name: "getCounterPermitSealed",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "data",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "utype",
            type: "uint8",
          },
        ],
        internalType: "struct SealedUint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040518060400160405280601181526020017f4668656e6978205065726d697373696f6e0000000000000000000000000000008152506040518060400160405280600381526020017f312e300000000000000000000000000000000000000000000000000000000000815250620000956000836200017660201b90919060201c565b6101208181525050620000b36001826200017660201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620000f2620001ce60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000826565b60006020835110156200019c5762000194836200022b60201b60201c565b9050620001c8565b82620001ae836200029860201b60201c565b6000019081620001bf91906200051c565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200021095949392919062000674565b60405160208183030381529060405280519060200120905090565b600080829050601f815111156200027b57826040517f305a27a900000000000000000000000000000000000000000000000000000000815260040162000272919062000760565b60405180910390fd5b8051816200028990620007b6565b60001c1760001b915050919050565b6000819050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200032457607f821691505b6020821081036200033a5762000339620002dc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003a47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000365565b620003b0868362000365565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003fd620003f7620003f184620003c8565b620003d2565b620003c8565b9050919050565b6000819050919050565b6200041983620003dc565b62000431620004288262000404565b84845462000372565b825550505050565b600090565b6200044862000439565b620004558184846200040e565b505050565b5b818110156200047d57620004716000826200043e565b6001810190506200045b565b5050565b601f821115620004cc57620004968162000340565b620004a18462000355565b81016020851015620004b1578190505b620004c9620004c08562000355565b8301826200045a565b50505b505050565b600082821c905092915050565b6000620004f160001984600802620004d1565b1980831691505092915050565b60006200050c8383620004de565b9150826002028217905092915050565b6200052782620002a2565b67ffffffffffffffff811115620005435762000542620002ad565b5b6200054f82546200030b565b6200055c82828562000481565b600060209050601f8311600181146200059457600084156200057f578287015190505b6200058b8582620004fe565b865550620005fb565b601f198416620005a48662000340565b60005b82811015620005ce57848901518255600182019150602085019450602081019050620005a7565b86831015620005ee5784890151620005ea601f891682620004de565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b620006188162000603565b82525050565b6200062981620003c8565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200065c826200062f565b9050919050565b6200066e816200064f565b82525050565b600060a0820190506200068b60008301886200060d565b6200069a60208301876200060d565b620006a960408301866200060d565b620006b860608301856200061e565b620006c7608083018462000663565b9695505050505050565b600082825260208201905092915050565b60005b8381101562000702578082015181840152602081019050620006e5565b60008484015250505050565b6000601f19601f8301169050919050565b60006200072c82620002a2565b620007388185620006d1565b93506200074a818560208601620006e2565b62000755816200070e565b840191505092915050565b600060208201905081810360008301526200077c81846200071f565b905092915050565b600081519050919050565b6000819050602082019050919050565b6000620007ad825162000603565b80915050919050565b6000620007c38262000784565b82620007cf846200078f565b9050620007dc816200079f565b925060208210156200081f576200081a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080262000365565b831692505b5050919050565b60805160a05160c05160e051610100516101205161014051611bfb6200088160003960006105bd0152600061058201526000610b1d01526000610afc015260006106250152600061067b015260006106a40152611bfb6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80635ef89f33146100675780637ec956541461009757806384b0196e146100b35780638ada066e146100d75780638da5cb5b146100f5578063ab07a95614610113575b600080fd5b610081600480360381019061007c91906111f0565b610143565b60405161008e9190611252565b60405180910390f35b6100b160048036038101906100ac9190611291565b610231565b005b6100bb61025d565b6040516100ce97969594939291906114a2565b60405180910390f35b6100df610307565b6040516100ec9190611252565b60405180910390f35b6100fd61031f565b60405161010a9190611526565b60405180910390f35b61012d600480360381019061012891906111f0565b610345565b60405161013a91906115e4565b60405180910390f35b600081600061019d7f6bdaeb2d29561f159c7ef98b16b27015fb2aeb87209c7ee656226d912f59927d8360000151604051602001610182929190611606565b60405160208183030381529060405280519060200120610441565b905060006101af82846020015161045b565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610216576040517f3093a27700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610221600254610487565b63ffffffff169350505050919050565b600061024582610240906116d4565b61054a565b905061025360025482610565565b6002819055505050565b600060608060008060006060610271610579565b6102796105b4565b46306000801b600067ffffffffffffffff81111561029a57610299611014565b5b6040519080825280602002602001820160405280156102c85781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000610314600254610487565b63ffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61034d610fcd565b8160006103a57f6bdaeb2d29561f159c7ef98b16b27015fb2aeb87209c7ee656226d912f59927d836000015160405160200161038a929190611606565b60405160208183030381529060405280519060200120610441565b905060006103b782846020015161045b565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461041e576040517f3093a27700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043785600001516002546105ef90919063ffffffff16565b9350505050919050565b600061045461044e610621565b836106d8565b9050919050565b60008060008061046b8686610719565b92509250925061047b8282610775565b82935050505092915050565b6000610492826108d9565b6104a3576104a060006108e6565b91505b600082905060006104b3826108fc565b90506000608073ffffffffffffffffffffffffffffffffffffffff166373cc01546002846040518363ffffffff1660e01b81526004016104f492919061174b565b602060405180830381865afa158015610511573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053591906117a7565b905061054081610959565b9350505050919050565b600061055e82600001518360200151610963565b9050919050565b60006105718383610979565b905092915050565b60606105af60007f00000000000000000000000000000000000000000000000000000000000000006109f190919063ffffffff16565b905090565b60606105ea60017f00000000000000000000000000000000000000000000000000000000000000006109f190919063ffffffff16565b905090565b6105f7610fcd565b604051806040016040528061060c8585610aa1565b8152602001600260ff16815250905092915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561069d57507f000000000000000000000000000000000000000000000000000000000000000046145b156106ca577f000000000000000000000000000000000000000000000000000000000000000090506106d5565b6106d2610ad7565b90505b90565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b6000806000604184510361075e5760008060006020870151925060408701519150606087015160001a905061075088828585610b6d565b95509550955050505061076e565b60006002855160001b9250925092505b9250925092565b60006003811115610789576107886117d4565b5b82600381111561079c5761079b6117d4565b5b03156108d557600160038111156107b6576107b56117d4565b5b8260038111156107c9576107c86117d4565b5b03610800576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610814576108136117d4565b5b826003811115610827576108266117d4565b5b0361086c578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016108639190611252565b60405180910390fd5b60038081111561087f5761087e6117d4565b5b826003811115610892576108916117d4565b5b036108d457806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016108cb9190611803565b60405180910390fd5b5b5050565b6000808214159050919050565b60006108f58260026000610c61565b9050919050565b6060602067ffffffffffffffff81111561091957610918611014565b5b6040519080825280601f01601f19166020018201604052801561094b5781602001600182028036833780820191505090505b509050816020820152919050565b6000819050919050565b600061097183600284610d06565b905092915050565b6000610984836108d9565b6109955761099260006108e6565b92505b61099e826108d9565b6109af576109ac60006108e6565b91505b6000839050600083905060006109e360028484608073ffffffffffffffffffffffffffffffffffffffff16622df619610da3565b905080935050505092915050565b606060ff60001b8314610a0e57610a0783610e37565b9050610a9b565b818054610a1a9061184d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a469061184d565b8015610a935780601f10610a6857610100808354040283529160200191610a93565b820191906000526020600020905b815481529060010190602001808311610a7657829003601f168201915b505050505090505b92915050565b6060610aac836108d9565b610abd57610aba60006108e6565b92505b6000839050610ace60028285610eab565b91505092915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610b5295949392919061187e565b60405160208183030381529060405280519060200120905090565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610bad576000600385925092509250610c57565b600060018888888860405160008152602001604052604051610bd294939291906118d1565b6020604051602081039080840390855afa158015610bf4573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c4857600060016000801b93509350935050610c57565b8060008060001b935093509350505b9450945094915050565b60006060608073ffffffffffffffffffffffffffffffffffffffff1663ba19ac28610c8b876108fc565b86866040518463ffffffff1660e01b8152600401610cab93929190611925565b600060405180830381865afa158015610cc8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610cf191906119d3565b9050610cfc81610f61565b9150509392505050565b60006060608073ffffffffffffffffffffffffffffffffffffffff166321b50ba38587866040518463ffffffff1660e01b8152600401610d4893929190611a1c565b600060405180830381865afa158015610d65573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d8e91906119d3565b9050610d9981610f61565b9150509392505050565b60006060838388610db3896108fc565b610dbc896108fc565b6040518463ffffffff1660e01b8152600401610dda93929190611a5a565b600060405180830381865afa158015610df7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610e2091906119d3565b9050610e2b81610f6f565b91505095945050505050565b60606000610e4483610f7d565b90506000602067ffffffffffffffff811115610e6357610e62611014565b5b6040519080825280601f01601f191660200182016040528015610e955781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b6060608073ffffffffffffffffffffffffffffffffffffffff1663a1848ff385610ed4866108fc565b85604051602001610ee59190611ac0565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610f1293929190611a5a565b600060405180830381865afa158015610f2f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f589190611b7c565b90509392505050565b600060208201519050919050565b600060208201519050919050565b60008060ff8360001c169050601f811115610fc4576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b604051806040016040528060608152602001600060ff1681525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61104c82611003565b810181811067ffffffffffffffff8211171561106b5761106a611014565b5b80604052505050565b600061107e610fea565b905061108a8282611043565b919050565b600080fd5b6000819050919050565b6110a781611094565b81146110b257600080fd5b50565b6000813590506110c48161109e565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156110ef576110ee611014565b5b6110f882611003565b9050602081019050919050565b82818337600083830152505050565b6000611127611122846110d4565b611074565b905082815260208101848484011115611143576111426110cf565b5b61114e848285611105565b509392505050565b600082601f83011261116b5761116a6110ca565b5b813561117b848260208601611114565b91505092915050565b60006040828403121561119a57611199610ffe565b5b6111a46040611074565b905060006111b4848285016110b5565b600083015250602082013567ffffffffffffffff8111156111d8576111d761108f565b5b6111e484828501611156565b60208301525092915050565b60006020828403121561120657611205610ff4565b5b600082013567ffffffffffffffff81111561122457611223610ff9565b5b61123084828501611184565b91505092915050565b6000819050919050565b61124c81611239565b82525050565b60006020820190506112676000830184611243565b92915050565b600080fd5b6000604082840312156112885761128761126d565b5b81905092915050565b6000602082840312156112a7576112a6610ff4565b5b600082013567ffffffffffffffff8111156112c5576112c4610ff9565b5b6112d184828501611272565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61130f816112da565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561134f578082015181840152602081019050611334565b60008484015250505050565b600061136682611315565b6113708185611320565b9350611380818560208601611331565b61138981611003565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113bf82611394565b9050919050565b6113cf816113b4565b82525050565b6113de81611094565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61141981611239565b82525050565b600061142b8383611410565b60208301905092915050565b6000602082019050919050565b600061144f826113e4565b61145981856113ef565b935061146483611400565b8060005b8381101561149557815161147c888261141f565b975061148783611437565b925050600181019050611468565b5085935050505092915050565b600060e0820190506114b7600083018a611306565b81810360208301526114c9818961135b565b905081810360408301526114dd818861135b565b90506114ec6060830187611243565b6114f960808301866113c6565b61150660a08301856113d5565b81810360c08301526115188184611444565b905098975050505050505050565b600060208201905061153b60008301846113c6565b92915050565b600082825260208201905092915050565b600061155d82611315565b6115678185611541565b9350611577818560208601611331565b61158081611003565b840191505092915050565b600060ff82169050919050565b6115a18161158b565b82525050565b600060408301600083015184820360008601526115c48282611552565b91505060208301516115d96020860182611598565b508091505092915050565b600060208201905081810360008301526115fe81846115a7565b905092915050565b600060408201905061161b60008301856113d5565b61162860208301846113d5565b9392505050565b60008160030b9050919050565b6116458161162f565b811461165057600080fd5b50565b6000813590506116628161163c565b92915050565b60006040828403121561167e5761167d610ffe565b5b6116886040611074565b9050600082013567ffffffffffffffff8111156116a8576116a761108f565b5b6116b484828501611156565b60008301525060206116c884828501611653565b60208301525092915050565b60006116e03683611668565b9050919050565b6116f08161158b565b82525050565b600081519050919050565b600082825260208201905092915050565b600061171d826116f6565b6117278185611701565b9350611737818560208601611331565b61174081611003565b840191505092915050565b600060408201905061176060008301856116e7565b81810360208301526117728184611712565b90509392505050565b61178481611239565b811461178f57600080fd5b50565b6000815190506117a18161177b565b92915050565b6000602082840312156117bd576117bc610ff4565b5b60006117cb84828501611792565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060208201905061181860008301846113d5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061186557607f821691505b6020821081036118785761187761181e565b5b50919050565b600060a08201905061189360008301886113d5565b6118a060208301876113d5565b6118ad60408301866113d5565b6118ba6060830185611243565b6118c760808301846113c6565b9695505050505050565b60006080820190506118e660008301876113d5565b6118f360208301866116e7565b61190060408301856113d5565b61190d60608301846113d5565b95945050505050565b61191f8161162f565b82525050565b6000606082019050818103600083015261193f8186611712565b905061194e60208301856116e7565b61195b6040830184611916565b949350505050565b6000611976611971846110d4565b611074565b905082815260208101848484011115611992576119916110cf565b5b61199d848285611331565b509392505050565b600082601f8301126119ba576119b96110ca565b5b81516119ca848260208601611963565b91505092915050565b6000602082840312156119e9576119e8610ff4565b5b600082015167ffffffffffffffff811115611a0757611a06610ff9565b5b611a13848285016119a5565b91505092915050565b6000606082019050611a3160008301866116e7565b8181036020830152611a438185611712565b9050611a526040830184611916565b949350505050565b6000606082019050611a6f60008301866116e7565b8181036020830152611a818185611712565b90508181036040830152611a958184611712565b9050949350505050565b6000819050919050565b611aba611ab582611094565b611a9f565b82525050565b6000611acc8284611aa9565b60208201915081905092915050565b600067ffffffffffffffff821115611af657611af5611014565b5b611aff82611003565b9050602081019050919050565b6000611b1f611b1a84611adb565b611074565b905082815260208101848484011115611b3b57611b3a6110cf565b5b611b46848285611331565b509392505050565b600082601f830112611b6357611b626110ca565b5b8151611b73848260208601611b0c565b91505092915050565b600060208284031215611b9257611b91610ff4565b5b600082015167ffffffffffffffff811115611bb057611baf610ff9565b5b611bbc84828501611b4e565b9150509291505056fea2646970667358221220adef6f5038f3ea4a09492a5f51d3a5da44a7e151aa716ebf5f16056e2a624d4364736f6c63430008140033";

type CounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Counter__factory extends ContractFactory {
  constructor(...args: CounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Counter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Counter__factory {
    return super.connect(runner) as Counter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new Interface(_abi) as CounterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Counter {
    return new Contract(address, _abi, runner) as unknown as Counter;
  }
}
