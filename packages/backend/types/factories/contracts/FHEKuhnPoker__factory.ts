/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FHEKuhnPoker,
  FHEKuhnPokerInterface,
} from "../../contracts/FHEKuhnPoker";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyAcceptedRematch",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRequestedRematch",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "GameEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "GameNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "GameNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "GameStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAction",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidGame",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPlayerB",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "ItsYourTurn",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughChips",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInGame",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPlayerInGame",
    type: "error",
  },
  {
    inputs: [],
    name: "NotYourTurn",
    type: "error",
  },
  {
    inputs: [],
    name: "OpponentHasLeft",
    type: "error",
  },
  {
    inputs: [],
    name: "OpponentStillHasTime",
    type: "error",
  },
  {
    inputs: [],
    name: "RematchCancelled",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotMessageSender",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "ChipTaken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "GameCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerA",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerB",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "GameJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum Action",
        name: "action",
        type: "uint8",
      },
    ],
    name: "PerformedGameAction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chips",
        type: "uint256",
      },
    ],
    name: "PlayerDealtIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerB",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "RematchAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerA",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "RematchCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByFold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByResignation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByShowdown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByTimeout",
    type: "event",
  },
  {
    inputs: [],
    name: "cancelSearch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "chips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chipCount",
        type: "uint256",
      },
    ],
    name: "dealMeIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "findGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rematchingGid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "playerA",
        type: "address",
      },
      {
        internalType: "address",
        name: "playerB",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "accepted",
            type: "bool",
          },
          {
            internalType: "euint8",
            name: "eCardA",
            type: "uint256",
          },
          {
            internalType: "euint8",
            name: "eCardB",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "pot",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "startingPlayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "activePlayer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "timeout",
            type: "uint64",
          },
          {
            internalType: "enum Action",
            name: "action1",
            type: "uint8",
          },
          {
            internalType: "enum Action",
            name: "action2",
            type: "uint8",
          },
          {
            internalType: "enum Action",
            name: "action3",
            type: "uint8",
          },
        ],
        internalType: "struct GameState",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "cardA",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "cardB",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "enum Outcome",
            name: "outcome",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "rematchGid",
            type: "uint256",
          },
        ],
        internalType: "struct GameOutcome",
        name: "outcome",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gid",
        type: "uint256",
      },
    ],
    name: "getGame",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchingGid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerA",
            type: "address",
          },
          {
            internalType: "address",
            name: "playerB",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "accepted",
                type: "bool",
              },
              {
                internalType: "euint8",
                name: "eCardA",
                type: "uint256",
              },
              {
                internalType: "euint8",
                name: "eCardB",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "pot",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "startingPlayer",
                type: "address",
              },
              {
                internalType: "address",
                name: "activePlayer",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "timeout",
                type: "uint64",
              },
              {
                internalType: "enum Action",
                name: "action1",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action2",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action3",
                type: "uint8",
              },
            ],
            internalType: "struct GameState",
            name: "state",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "cardA",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "cardB",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "winner",
                type: "address",
              },
              {
                internalType: "enum Outcome",
                name: "outcome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "rematchGid",
                type: "uint256",
              },
            ],
            internalType: "struct GameOutcome",
            name: "outcome",
            type: "tuple",
          },
        ],
        internalType: "struct Game",
        name: "game",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "publicKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Permission",
        name: "permission",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_gid",
        type: "uint256",
      },
    ],
    name: "getGameCard",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "data",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "utype",
            type: "uint8",
          },
        ],
        internalType: "struct SealedUint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_playerA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_playerB",
        type: "address",
      },
    ],
    name: "getPairGames",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchingGid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerA",
            type: "address",
          },
          {
            internalType: "address",
            name: "playerB",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "accepted",
                type: "bool",
              },
              {
                internalType: "euint8",
                name: "eCardA",
                type: "uint256",
              },
              {
                internalType: "euint8",
                name: "eCardB",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "pot",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "startingPlayer",
                type: "address",
              },
              {
                internalType: "address",
                name: "activePlayer",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "timeout",
                type: "uint64",
              },
              {
                internalType: "enum Action",
                name: "action1",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action2",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action3",
                type: "uint8",
              },
            ],
            internalType: "struct GameState",
            name: "state",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "cardA",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "cardB",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "winner",
                type: "address",
              },
              {
                internalType: "enum Outcome",
                name: "outcome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "rematchGid",
                type: "uint256",
              },
            ],
            internalType: "struct GameOutcome",
            name: "outcome",
            type: "tuple",
          },
        ],
        internalType: "struct Game[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserGameState",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rematchingGid",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "playerA",
                type: "address",
              },
              {
                internalType: "address",
                name: "playerB",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "accepted",
                    type: "bool",
                  },
                  {
                    internalType: "euint8",
                    name: "eCardA",
                    type: "uint256",
                  },
                  {
                    internalType: "euint8",
                    name: "eCardB",
                    type: "uint256",
                  },
                  {
                    internalType: "uint8",
                    name: "pot",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "startingPlayer",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "activePlayer",
                    type: "address",
                  },
                  {
                    internalType: "uint64",
                    name: "timeout",
                    type: "uint64",
                  },
                  {
                    internalType: "enum Action",
                    name: "action1",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Action",
                    name: "action2",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Action",
                    name: "action3",
                    type: "uint8",
                  },
                ],
                internalType: "struct GameState",
                name: "state",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "gid",
                    type: "uint256",
                  },
                  {
                    internalType: "uint8",
                    name: "cardA",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "cardB",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "winner",
                    type: "address",
                  },
                  {
                    internalType: "enum Outcome",
                    name: "outcome",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "rematchGid",
                    type: "uint256",
                  },
                ],
                internalType: "struct GameOutcome",
                name: "outcome",
                type: "tuple",
              },
            ],
            internalType: "struct Game",
            name: "game",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "selfChips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "opponentChips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeGid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchGid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "selfGid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "opponentGid",
            type: "uint256",
          },
        ],
        internalType: "struct FHEKuhnPoker.UserGameState",
        name: "gameState",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserGames",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchingGid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerA",
            type: "address",
          },
          {
            internalType: "address",
            name: "playerB",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "accepted",
                type: "bool",
              },
              {
                internalType: "euint8",
                name: "eCardA",
                type: "uint256",
              },
              {
                internalType: "euint8",
                name: "eCardB",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "pot",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "startingPlayer",
                type: "address",
              },
              {
                internalType: "address",
                name: "activePlayer",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "timeout",
                type: "uint64",
              },
              {
                internalType: "enum Action",
                name: "action1",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action2",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action3",
                type: "uint8",
              },
            ],
            internalType: "struct GameState",
            name: "state",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "cardA",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "cardB",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "winner",
                type: "address",
              },
              {
                internalType: "enum Outcome",
                name: "outcome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "rematchGid",
                type: "uint256",
              },
            ],
            internalType: "struct GameOutcome",
            name: "outcome",
            type: "tuple",
          },
        ],
        internalType: "struct Game[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Action",
        name: "action",
        type: "uint8",
      },
    ],
    name: "performAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rematch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timeoutDuration",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeoutOpponent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userActiveGame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040526000600255600380546001600160401b031916607817815562000028906200015a565b6004556200003760026200015a565b6005556200004660016200015a565b6006556000600c553480156200005b57600080fd5b506040805180820182526011815270233432b734bc102832b936b4b9b9b4b7b760791b602080830191909152825180840190935260038352620312e360ec1b9083015290620000ac8260006200016f565b61012052620000bd8160016200016f565b61014052815160208084019190912060e052815190820120610100524660a0526200014b60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052620005a2565b600062000169828280620001a6565b92915050565b60006020835110156200018f5762000187836200023d565b905062000169565b816200019c848262000358565b5060ff9392505050565b60006060608063ba19ac28620001bc8762000289565b86866040518463ffffffff1660e01b8152600401620001de9392919062000478565b600060405180830381865afa158015620001fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002269190810190620004a9565b905062000234816020015190565b95945050505050565b600080829050601f8151111562000274578260405163305a27a960e01b81526004016200026b919062000561565b60405180910390fd5b805162000281826200057d565b179392505050565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002de57607f821691505b602082108103620002ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035357600081815260208120601f850160051c810160208610156200032e5750805b601f850160051c820191505b818110156200034f578281556001016200033a565b5050505b505050565b81516001600160401b03811115620003745762000374620002b3565b6200038c81620003858454620002c9565b8462000305565b602080601f831160018114620003c45760008415620003ab5750858301515b600019600386901b1c1916600185901b1785556200034f565b600085815260208120601f198616915b82811015620003f557888601518255948401946001909101908401620003d4565b5085821015620004145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60005b838110156200044157818101518382015260200162000427565b50506000910152565b600081518084526200046481602086016020860162000424565b601f01601f19169290920160200192915050565b6060815260006200048d60608301866200044a565b905060ff841660208301528260030b6040830152949350505050565b600060208284031215620004bc57600080fd5b81516001600160401b0380821115620004d457600080fd5b818401915084601f830112620004e957600080fd5b815181811115620004fe57620004fe620002b3565b604051601f8201601f19908116603f01168101908382118183101715620005295762000529620002b3565b816040528281528760208487010111156200054357600080fd5b6200055683602083016020880162000424565b979650505050505050565b6020815260006200057660208301846200044a565b9392505050565b80516020808301519190811015620002ff5760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051613ce8620005fd6000396000612126015260006120f401526000612901015260006128d9015260006128340152600061285e015260006128880152613ce86000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806340d45343116100ad57806385d19e1a1161007157806385d19e1a1461027a578063a2f77bcc146102a5578063d544577d146102c5578063f7669a6a146102cd578063fdcd4c1c146102d557600080fd5b806340d453431461020457806369652fcf1461021757806375f205401461021f5780637d130ac81461023f57806384b0196e1461025f57600080fd5b80632123a0cb116100f45780632123a0cb146101a05780632ee9191d146101c05780632f04c3f4146101d357806333606708146101f35780633a95ae0d146101fc57600080fd5b8063117a5b9014610126578063120aace614610154578063140a2e44146101745780631c9a23371461018b575b600080fd5b6101396101343660046134ce565b6102dd565b60405161014b96959493929190613621565b60405180910390f35b61016761016236600461367e565b6104b6565b60405161014b91906136ef565b61017d600c5481565b60405190815260200161014b565b61019e61019936600461373e565b61079a565b005b6101b36101ae36600461367e565b610957565b60405161014b919061375f565b61019e6101ce3660046134ce565b610e42565b6101e66101e136600461384f565b610e9e565b60405161014b919061395f565b61017d60025481565b61019e6111f8565b610167610212366004613994565b611272565b61019e61157f565b61017d61022d36600461367e565b60096020526000908152604090205481565b61017d61024d36600461367e565b60076020526000908152604090205481565b610267611637565b60405161014b97969594939291906139c7565b60035461028d906001600160401b031681565b6040516001600160401b03909116815260200161014b565b6102b86102b33660046134ce565b61167d565b60405161014b9190613a5d565b61019e61188f565b61019e61191c565b61019e611aff565b60086020818152600092835260409283902080546001820154600283015460038401548751610140810189526004808701805460ff9081161515845260058901549984019990995260068801549a83019a909a52600787015480891660608401526001600160a01b036101009091048116608084015298870154808a1660a0840152600160a01b81046001600160401b031660c0840152959994989384169793909216959490939260e0850192600160e01b90920416908111156103a3576103a36134e7565b60048111156103b4576103b46134e7565b815260200160048201601d9054906101000a900460ff1660048111156103dc576103dc6134e7565b60048111156103ed576103ed6134e7565b815260200160048201601e9054906101000a900460ff166004811115610415576104156134e7565b6004811115610426576104266134e7565b9052506040805160c0810182526009840180548252600a85015460ff808216602085015261010082048116948401949094526001600160a01b03620100008204166060840152939493919290916080840191600160b01b909104166005811115610492576104926134e7565b60058111156104a3576104a36134e7565b8152602001600282015481525050905086565b6001600160a01b0381166000908152600a60205260408120606091906104db90611c5a565b9050806001600160401b038111156104f5576104f56137ba565b60405190808252806020026020018201604052801561052e57816020015b61051b6133c5565b8152602001906001900390816105135790505b50915060005b81811015610793576001600160a01b0384166000908152600a60205260408120600891906105629084611c6a565b81526020808201929092526040908101600020815160c080820184528254825260018301548286015260028301546001600160a01b0390811683860152600384015481166060808501919091528551610140810187526004808701805460ff9081161515845260058901549a84019a909a526006880154988301989098526007870154808a16938301939093526101009092048316608082810191909152600887015493841660a08301526001600160401b03600160a01b85041694820194909452939694959287019460e0850192600160e01b90041690811115610649576106496134e7565b600481111561065a5761065a6134e7565b815260200160048201601d9054906101000a900460ff166004811115610682576106826134e7565b6004811115610693576106936134e7565b815260200160048201601e9054906101000a900460ff1660048111156106bb576106bb6134e7565b60048111156106cc576106cc6134e7565b90525081526040805160c0810182526009840180548252600a85015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b909104166005811115610740576107406134e7565b6005811115610751576107516134e7565b81526020016002820154815250508152505083828151811061077557610775613a6c565b6020026020010181905250808061078b90613a98565b915050610534565b5050919050565b3360009081526009602052604081205490036107c95760405163218286cb60e11b815260040160405180910390fd5b33600090815260096020908152604080832054835260089091529020600481015460ff1661080a57604051633a5f7b5760e01b815260040160405180910390fd5b6000600a820154600160b01b900460ff16600581111561082c5761082c6134e7565b1461084a576040516308426a3f60e11b815260040160405180910390fd5b60088101546001600160a01b0316331461087757604051631cc191eb60e31b815260040160405180910390fd5b805460405133907fd23f410feb433bf52f5f38608c94bfba4272af89e01381eb029945668cc40d53906108ab908690613ab1565b60405180910390a360006008820154600160e01b900460ff1660048111156108d5576108d56134e7565b036108e8576108e48183611c7d565b5050565b60026008820154600160e01b900460ff16600481111561090a5761090a6134e7565b03610919576108e48183611d0f565b60006008820154600160e81b900460ff16600481111561093b5761093b6134e7565b0361094a576108e48183611d88565b6108e48183611df8565b50565b61095f61348b565b6001600160a01b03821660008181526009602090815260408083205460a0860190815293835260078252822054908401529051900361099d57919050565b60a0808201516000908152600860208181526040808420815160c080820184528254825260018301548286015260028301546001600160a01b0390811683860152600384015481166060808501919091528551610140810187526004808701805460ff9081161515845260058901549a84019a909a526006880154988301989098526007870154808a16938301939093526101009092048316608082810191909152988601549283169a81019a909a526001600160401b03600160a01b830416928a019290925296979196929587019491939260e0850192600160e01b9091041690811115610a8e57610a8e6134e7565b6004811115610a9f57610a9f6134e7565b815260200160048201601d9054906101000a900460ff166004811115610ac757610ac76134e7565b6004811115610ad857610ad86134e7565b815260200160048201601e9054906101000a900460ff166004811115610b0057610b006134e7565b6004811115610b1157610b116134e7565b90525081526040805160c0810182526009840180548252600a85015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b909104166005811115610b8557610b856134e7565b6005811115610b9657610b966134e7565b81526002919091015460209091015290525060808101515190915015610e0f5760a0808301516060840181905282820151909101516080840152600090610bdd9085611e1f565b6001600160a01b0380821660008181526009602090815260408083205460c0808b01919091529383526007808352818420548a8301526060808b015185526008808552948390208351808801855281548152600182015481870152600282015489168186015260038201548916818401528451610140810186526004808401805460ff90811615158452600586015499840199909952600685015497830197909752948301548088169482019490945261010090930489166080848101919091529682015498891660a08401526001600160401b03600160a01b8a0416978301979097529798509496959387019493919260e0850192600160e01b90041690811115610ceb57610ceb6134e7565b6004811115610cfc57610cfc6134e7565b815260200160048201601d9054906101000a900460ff166004811115610d2457610d246134e7565b6004811115610d3557610d356134e7565b815260200160048201601e9054906101000a900460ff166004811115610d5d57610d5d6134e7565b6004811115610d6e57610d6e6134e7565b90525081526040805160c0810182526009840180548252600a85015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b909104166005811115610de257610de26134e7565b6005811115610df357610df36134e7565b8152600291909101546020909101529052508352509092915050565b602081015115610e3c5760208101516060830181905260a08301516080840152600090610bdd9085611e1f565b50919050565b3360009081526007602052604081208054839290610e61908490613abf565b909155505060405181815233907fec5c270dc3e37271f6b1ee63cbba191d44debdfe43ef27ebdc3032d2b747e4349060200160405180910390a250565b604080518082019091526060815260006020820152826000610f147f6bdaeb2d29561f159c7ef98b16b27015fb2aeb87209c7ee656226d912f59927d8360000151604051602001610ef9929190918252602082015260400190565b60405160208183030381529060405280519060200120611e83565b90506000610f26828460200151611eb0565b90506001600160a01b0381163314610f5157604051633093a27760e01b815260040160405180910390fd5b84600254811115610f75576040516357e25a0960e01b815260040160405180910390fd5b6000868152600860208181526040808420815160c080820184528254825260018301548286015260028301546001600160a01b0390811683860152600384015481166060808501919091528551610140810187526004808701805460ff9081161515845260058901549a84019a909a526006880154988301989098526007870154808a169383019390935261010090920483166080828101919091529886015492831660a08201526001600160401b03600160a01b8404169381019390935292969395938701949193919260e0850192600160e01b90920490911690811115611060576110606134e7565b6004811115611071576110716134e7565b815260200160048201601d9054906101000a900460ff166004811115611099576110996134e7565b60048111156110aa576110aa6134e7565b815260200160048201601e9054906101000a900460ff1660048111156110d2576110d26134e7565b60048111156110e3576110e36134e7565b90525081526040805160c0810182526009840180548252600a85015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b909104166005811115611157576111576134e7565b6005811115611168576111686134e7565b81526002919091015460209091015290525060408101519091506001600160a01b031633036111ad5787516080820151602001516111a591611eda565b9550506111ee565b60608101516001600160a01b031633036111d55787516080820151604001516111a591611eda565b6040516339e5f32960e21b815260040160405180910390fd5b5050505092915050565b3360009081526009602052604081205490036112275760405163218286cb60e11b815260040160405180910390fd5b33600090815260096020908152604080832054835260089091529020600481015460ff161561126957604051631d8bc98160e21b815260040160405180910390fd5b61095481611ef9565b60606000806112818585611fa9565b6001600160a01b038083166000908152600b602090815260408083209385168352929052908120929450909250906112b890611c5a565b9050806001600160401b038111156112d2576112d26137ba565b60405190808252806020026020018201604052801561130b57816020015b6112f86133c5565b8152602001906001900390816112f05790505b50935060005b818110156111ee576001600160a01b038085166000908152600b6020908152604080832093871683529290529081206008919061134e9084611c6a565b81526020808201929092526040908101600020815160c080820184528254825260018301548286015260028301546001600160a01b0390811683860152600384015481166060808501919091528551610140810187526004808701805460ff9081161515845260058901549a84019a909a526006880154988301989098526007870154808a16938301939093526101009092048316608082810191909152600887015493841660a08301526001600160401b03600160a01b85041694820194909452939694959287019460e0850192600160e01b90041690811115611435576114356134e7565b6004811115611446576114466134e7565b815260200160048201601d9054906101000a900460ff16600481111561146e5761146e6134e7565b600481111561147f5761147f6134e7565b815260200160048201601e9054906101000a900460ff1660048111156114a7576114a76134e7565b60048111156114b8576114b86134e7565b90525081526040805160c0810182526009840180548252600a85015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b90910416600581111561152c5761152c6134e7565b600581111561153d5761153d6134e7565b81526020016002820154815250508152505085828151811061156157611561613a6c565b6020026020010181905250808061157790613a98565b915050611311565b3360009081526009602052604081205490036115ae5760405163218286cb60e11b815260040160405180910390fd5b3360009081526009602090815260408083205483526008909152812090600a820154600160b01b900460ff1660058111156115eb576115eb6134e7565b14611609576040516308426a3f60e11b815260040160405180910390fd5b600481015460ff1661162e57604051633a5f7b5760e01b815260040160405180910390fd5b61095481611fdd565b60006060806000806000606061164b6120ed565b61165361211f565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6116856133c5565b600082815260086020818152604092839020835160c080820186528254825260018301548285015260028301546001600160a01b0390811683880152600384015481166060808501919091528751610140810189526004808701805460ff9081161515845260058901549984019990995260068801549a83019a909a5260078701548089169383019390935261010090920483166080828101919091529786015492831660a08201526001600160401b03600160a01b840416938101939093529296939587019491939260e0850192600160e01b9092049091169081111561176f5761176f6134e7565b6004811115611780576117806134e7565b815260200160048201601d9054906101000a900460ff1660048111156117a8576117a86134e7565b60048111156117b9576117b96134e7565b815260200160048201601e9054906101000a900460ff1660048111156117e1576117e16134e7565b60048111156117f2576117f26134e7565b90525081526040805160c0810182526009840180548252600a85015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b909104166005811115611866576118666134e7565b6005811115611877576118776134e7565b81526002919091015460209091015290525092915050565b33600090815260096020526040902054156118ee57336000908152600960209081526040808320548352600890915290206118c99061214c565b336000908152600960209081526040808320548352600890915290206118ee9061216b565b600c54600003611900576109546121a4565b600c54600090815260086020526040902061191a9061220d565b565b33600090815260096020526040812054900361194b5760405163218286cb60e11b815260040160405180910390fd5b33600090815260096020908152604080832054835260089091529020600481015460ff1661198c57604051633a5f7b5760e01b815260040160405180910390fd5b6000600a820154600160b01b900460ff1660058111156119ae576119ae6134e7565b146119cc576040516308426a3f60e11b815260040160405180910390fd5b6008810154336001600160a01b03909116036119fb5760405163cd84c54560e01b815260040160405180910390fd5b6008810154600160a01b90046001600160401b0316421015611a30576040516356795e7160e11b815260040160405180910390fd5b6008810180546001600160a01b0319169055600a81018054600360b01b6201000033810262010000600160b81b0319909316929092171791829055600780840154919092046001600160a01b0316600090815260209290925260408220805460ff909216929091611aa2908490613abf565b90915550508054600a820154600783015460405160ff9091168152620100009091046001600160a01b0316907ff2853373dee556a3867a315163b8c1250e471d33af19641542d76e7be76d5b20906020015b60405180910390a350565b336000908152600960205260408120549003611b2e5760405163218286cb60e11b815260040160405180910390fd5b3360009081526009602090815260408083205483526008909152812090600a820154600160b01b900460ff166005811115611b6b57611b6b6134e7565b03611b8957604051638f86c6b360e01b815260040160405180910390fd5b6000611b99826000015433611e1f565b600b830154909150600003611bf95781546001600160a01b03821660009081526009602052604090205414611be157604051630741cddb60e11b815260040160405180910390fd5b8154611bed90826122b2565b600b9092019190915550565b600b82015460009081526008602052604090206004600a820154600160b01b900460ff166005811115611c2e57611c2e6134e7565b03611c4c57604051633b963c9760e11b815260040160405180910390fd5b611c5581612330565b505050565b6000611c64825490565b92915050565b6000611c7683836123d6565b9392505050565b60088201805482919060ff60e01b1916600160e01b836004811115611ca457611ca46134e7565b02179055506002816004811115611cbd57611cbd6134e7565b03611cd457611ccb82612400565b6108e4826124c7565b6001816004811115611ce857611ce86134e7565b03611cf6576108e4826124c7565b604051634a7f394f60e01b815260040160405180910390fd5b60088201805482919060ff60e81b1916600160e81b836004811115611d3657611d366134e7565b02179055506004816004811115611d4f57611d4f6134e7565b03611d6657611d5d82612400565b6108e48261256e565b6003816004811115611d7a57611d7a6134e7565b03611cf6576108e4826126c9565b60088201805482919060ff60e81b1916600160e81b836004811115611daf57611daf6134e7565b02179055506002816004811115611dc857611dc86134e7565b03611dd657611ccb82612400565b6001816004811115611dea57611dea6134e7565b03611cf6576108e48261256e565b60088201805482919060ff60f01b1916600160f01b836004811115611d3657611d366134e7565b6000828152600860205260408120600201546001600160a01b03838116911614611e63576000838152600860205260409020600201546001600160a01b0316611c76565b50506000908152600860205260409020600301546001600160a01b031690565b6000611c64611e90612827565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080611ec08686612952565b925092509250611ed0828261299f565b5090949350505050565b604080518082019091526060815260006020820152611c768383612a5d565b600a8101805460ff60b01b1916600160b21b17905560078082015433600090815260209290925260408220805460ff909216929091611f39908490613abf565b90915550508054336000908152600a60205260409020611f5891612a98565b5033600090815260096020526040812055600c54815403611f79576000600c555b805460405133907fecf51bb2698f4bba616fb07332e1d861a5430f472e11538556f2823d33ecb15d90600090a350565b600080826001600160a01b0316846001600160a01b03161015611fd0575082905081611fd6565b50819050825b9250929050565b6008810180546001600160a01b0319169055600a8101805460ff60b01b1916600560b01b17905560028101546001600160a01b0316331461202b5760028101546001600160a01b031661203a565b60038101546001600160a01b03165b600a8201805462010000600160b01b031916620100006001600160a01b039384168102919091179182905560078085015491909204909216600090815260209190915260408120805460ff90931692909190612097908490613abf565b90915550508054600a820154600783015460405160ff9091168152620100009091046001600160a01b0316907f147c1b54274befbb22c45bfad77ac0dd59009b6e592020d25e642f5ac2022f0090602001611af4565b606061211a7f00000000000000000000000000000000000000000000000000000000000000006000612aa4565b905090565b606061211a7f00000000000000000000000000000000000000000000000000000000000000006001612aa4565b806001015460000361215b5750565b600481015460ff16156112695750565b600481015460ff1661217a5750565b6000600a820154600160b01b900460ff16600581111561219c5761219c6134e7565b1461162e5750565b60006121ae612b4f565b336000908152600a602052604090209091506121ca9082612ba0565b50600c81905533600081815260096020526040808220849055518392917f306841c3fce8498c2d9b7194b8da4c04d03847394e237b625ce6d029b107f07791a390565b6002810154336001600160a01b039091160361223c57604051630793469160e51b815260040160405180910390fd5b61224581612bac565b8054336000908152600a6020526040902061225f91612ba0565b506000600c81905581543382526009602052604090912081905561228290612d1e565b805460405133907fc7f886847371dba98b78e0d0d59e29f4abfaf6e953d6897a761992cb2627e68790600090a350565b60006122bc612b4f565b60008181526008602090815260408083206001810188905560030180546001600160a01b0319166001600160a01b03881617905533808452600990925280832084905551929350839290917fbbe33ac9017c7f0d5244dc1f205e11ca9a813daa7c69febfdd87d774f0c7566591a392915050565b61233981612bac565b805460028201546001600160a01b03166000908152600a6020526040902061236091612ba0565b50805460038201546001600160a01b03166000908152600a6020526040902061238891612ba0565b5080543360009081526009602052604090208190556123a690612d1e565b805460405133907f211b27e39a49d8b83e5e19b450797dee8b5d5a50058b146aa47408a37304129790600090a350565b60008260000182815481106123ed576123ed613a6c565b9060005260206000200154905092915050565b33600090815260076020526040902054600111156124315760405163103f2c3560e21b815260040160405180910390fd5b336000908152600760205260408120805460019290612451908490613ad2565b90915550506007810180546001919060009061247190849060ff16613ae5565b92506101000a81548160ff021916908360ff1602179055508060000154336001600160a01b03167f7223189244c0c472afd54aec796b8d40651ee7c5b10e8907ace7720cba1448af60405160405180910390a350565b6003546124dd906001600160401b031642613afe565b6008820180546001600160401b0392909216600160a01b0267ffffffffffffffff60a01b198316811790915560028301546001600160a01b039182169282169290921791161461253a5760028101546001600160a01b0316612549565b60038101546001600160a01b03165b60089190910180546001600160a01b0319166001600160a01b03909216919091179055565b6008810180546001600160e01b0319169055600581015461258e90612d89565b600a8201805460ff191660ff9290921691909117905560068101546125b290612d89565b600a8201805460ff92831661010090810261ff0019831681179384905592048316918316921691909117116125f45760038101546001600160a01b0316612603565b60028101546001600160a01b03165b600a8201805462010000600160b01b031916620100006001600160a01b039384168102919091179182905560078085015491909204909216600090815260209190915260408120805460ff90931692909190612660908490613abf565b9091555050600a8101805460ff60b01b1916600160b01b17908190558154600783015460405160ff909116815290916201000090046001600160a01b0316907f6b3f6c5f959ad5b6826509086e36a0928378a8b8cc000b7d9789a774fda2f00390602001611af4565b6008810180546001600160e01b031916905560058101546126e990612d89565b600a8201805460ff191660ff92909216919091179055600681015461270d90612d89565b600a8201805461ff00191661010060ff939093169290920291909117905560028101546001600160a01b031633146127525760028101546001600160a01b0316612761565b60038101546001600160a01b03165b600a8201805462010000600160b01b031916620100006001600160a01b039384168102919091179182905560078085015491909204909216600090815260209190915260408120805460ff909316929091906127be908490613abf565b9091555050600a8101805460ff60b01b1916600160b11b17908190558154600783015460405160ff909116815290916201000090046001600160a01b0316907f398f5677dc9617d4ce2fe16114560f1b001e5ab80a5185c3a6ad3e285864dc1b90602001611af4565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561288057507f000000000000000000000000000000000000000000000000000000000000000046145b156128aa57507f000000000000000000000000000000000000000000000000000000000000000090565b61211a604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000806000835160410361298c5760208401516040850151606086015160001a61297e88828585612d94565b955095509550505050612998565b50508151600091506002905b9250925092565b60008260038111156129b3576129b36134e7565b036129bc575050565b60018260038111156129d0576129d06134e7565b036129ee5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115612a0257612a026134e7565b03612a285760405163fce698f760e01b8152600481018290526024015b60405180910390fd5b6003826003811115612a3c57612a3c6134e7565b036108e4576040516335e2f38360e21b815260048101829052602401612a1f565b6040805180820190915260608152600060208201526040518060400160405280612a878585612e63565b815260006020909101529392505050565b6000611c768383612e8c565b606060ff8314612abe57612ab783612f86565b9050611c64565b818054612aca90613b1e565b80601f0160208091040260200160405190810160405280929190818152602001828054612af690613b1e565b8015612b435780601f10612b1857610100808354040283529160200191612b43565b820191906000526020600020905b815481529060010190602001808311612b2657829003601f168201915b50505050509050611c64565b6000600160026000828254612b649190613abf565b909155505060028054600081815260086020526040902090815590810180546001600160a01b03191633179055612b9a81612400565b54919050565b6000611c768383612fc5565b612bb581612400565b60048101805460ff19166001179055600380820180546001600160a01b0319163317905554612bed906001600160401b031642613afe565b6008820180546001600160401b0392909216600160a01b0267ffffffffffffffff60a01b1990921691909117905560006002612c2f612c2a613014565b613020565b612c399190613b52565b905060ff811615612c575760038201546001600160a01b0316612c66565b60028201546001600160a01b03165b600783018054610100600160a81b0319166101006001600160a01b0393841681029190911791829055600885018054919092049092166001600160a01b03199092169190911790556000612cb8613014565b9050612ccf6004548261302d90919063ffffffff16565b83600401600101819055506000612cfc600654612cf6600554612cf0613014565b9061302d565b90613039565b600454909150612d1090612cf08484613039565b600690940193909355505050565b600081815260086020526040812060028101546003909101548291612d4f916001600160a01b039182169116611fa9565b6001600160a01b038083166000908152600b602090815260408083209385168352929052209193509150612d839084612ba0565b50505050565b6000611c6482613020565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115612dcf5750600091506003905082612e59565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015612e23573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612e4f57506000925060019150829050612e59565b9250600091508190505b9450945094915050565b606082612e7757612e746000613045565b92505b82612e8460008285613053565b949350505050565b60008181526001830160205260408120548015612f75576000612eb0600183613ad2565b8554909150600090612ec490600190613ad2565b9050808214612f29576000866000018281548110612ee457612ee4613a6c565b9060005260206000200154905080876000018481548110612f0757612f07613a6c565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612f3a57612f3a613b82565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611c64565b6000915050611c64565b5092915050565b60606000612f93836130e4565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600081815260018301602052604081205461300c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611c64565b506000611c64565b600061211a600061310c565b6000611c6482608061311b565b6000611c7683836131bd565b6000611c768383613203565b6000611c648260008061323e565b6060608063a1848ff385613066866132cd565b6040805160208101889052016040516020818303038152906040526040518463ffffffff1660e01b815260040161309f93929190613b98565b600060405180830381865afa1580156130bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612e849190810190613bf6565b600060ff8216601f811115611c6457604051632cd44ac360e21b815260040160405180910390fd5b600080611c76600080856132f7565b60008261312f5761312c6000613045565b92505b60ff821683600061313f826132cd565b604051637c4697ab60e01b8152909150600090608090637c4697ab9061316d90849086908990600401613c3e565b602060405180830381865afa15801561318a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ae9190613c6a565b9050805b979650505050505050565b6000826131d1576131ce6000613045565b92505b816131e3576131e06000613045565b91505b828260006131f9818484608063eb37680461333c565b9695505050505050565b600082613217576132146000613045565b92505b81613229576132266000613045565b91505b828260006131f98184846080622df61961333c565b60006060608063ba19ac28613252876132cd565b86866040518463ffffffff1660e01b815260040161327293929190613c83565b600060405180830381865afa15801561328f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132b79190810190613bf6565b90506132c4816020015190565b95945050505050565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b604051635531374560e11b815260ff841660048201526001600160401b0383166024820152600382900b6044820152600090819060809063aa626e8a90606401613272565b6000606083838861334c896132cd565b613355896132cd565b6040518463ffffffff1660e01b815260040161337393929190613b98565b600060405180830381865afa158015613390573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526133b89190810190613bf6565b90506131b2816020015190565b6040518060c00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016134536040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290529060e08201908152602001600081526020016000905290565b81526040805160c08101825260008082526020828101829052928201819052606082018190526080820181905260a082015291015290565b6040518060e0016040528061349e6133c5565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000602082840312156134e057600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6005811061350d5761350d6134e7565b9052565b8051151582526020810151602083015260408101516040830152606081015161353f606084018260ff169052565b50608081015161355a60808401826001600160a01b03169052565b5060a081015161357560a08401826001600160a01b03169052565b5060c081015161359060c08401826001600160401b03169052565b5060e08101516135a360e08401826134fd565b50610100808201516135b7828501826134fd565b505061012080820151612d83828501826134fd565b8051825260ff602082015116602083015260ff604082015116604083015260018060a01b036060820151166060830152608081015160068110613611576136116134e7565b608083015260a090810151910152565b868152602081018690526001600160a01b0385811660408301528416606082015261028081016136546080830185613511565b6131b26101c08301846135cc565b80356001600160a01b038116811461367957600080fd5b919050565b60006020828403121561369057600080fd5b611c7682613662565b8051825260208101516020830152604081015160018060a01b038082166040850152806060840151166060850152505060808101516136db6080840182613511565b5060a0810151611c556101c08401826135cc565b6020808252825182820181905260009190848201906040850190845b818110156137325761371e838551613699565b92840192610280929092019160010161370b565b50909695505050505050565b60006020828403121561375057600080fd5b813560058110611c7657600080fd5b600061034082019050613773828451613699565b602083015161028083015260408301516102a083015260608301516102c083015260808301516102e083015260a083015161030083015260c0909201516103209091015290565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156137f2576137f26137ba565b60405290565b604051601f8201601f191681016001600160401b0381118282101715613820576138206137ba565b604052919050565b60006001600160401b03821115613841576138416137ba565b50601f01601f191660200190565b6000806040838503121561386257600080fd5b82356001600160401b038082111561387957600080fd5b908401906040828703121561388d57600080fd5b6138956137d0565b82358152602080840135838111156138ac57600080fd5b80850194505087601f8501126138c157600080fd5b833592506138d66138d184613828565b6137f8565b83815288828587010111156138ea57600080fd5b8382860183830137600093810182019390935281810192909252969401359450505050565b60005b8381101561392a578181015183820152602001613912565b50506000910152565b6000815180845261394b81602086016020860161390f565b601f01601f19169290920160200192915050565b60208152600082516040602084015261397b6060840182613933565b905060ff60208501511660408401528091505092915050565b600080604083850312156139a757600080fd5b6139b083613662565b91506139be60208401613662565b90509250929050565b60ff60f81b881681526000602060e0818401526139e760e084018a613933565b83810360408501526139f9818a613933565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015613a4b57835183529284019291840191600101613a2f565b50909c9b505050505050505050505050565b6102808101611c648284613699565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201613aaa57613aaa613a82565b5060010190565b60208101611c6482846134fd565b80820180821115611c6457611c64613a82565b81810381811115611c6457611c64613a82565b60ff8181168382160190811115611c6457611c64613a82565b6001600160401b03818116838216019080821115612f7f57612f7f613a82565b600181811c90821680613b3257607f821691505b602082108103610e3c57634e487b7160e01b600052602260045260246000fd5b600060ff831680613b7357634e487b7160e01b600052601260045260246000fd5b8060ff84160691505092915050565b634e487b7160e01b600052603160045260246000fd5b60ff84168152606060208201526000613bb46060830185613933565b82810360408401526131f98185613933565b6000613bd46138d184613828565b9050828152838383011115613be857600080fd5b611c7683602083018461390f565b600060208284031215613c0857600080fd5b81516001600160401b03811115613c1e57600080fd5b8201601f81018413613c2f57600080fd5b612e8484825160208401613bc6565b60ff84168152606060208201526000613c5a6060830185613933565b9050826040830152949350505050565b600060208284031215613c7c57600080fd5b5051919050565b606081526000613c966060830186613933565b905060ff841660208301528260030b604083015294935050505056fea26469706673582212202f4f0dc9e7308c6a5c83316a3950263f97e7d365a34fb6f369dde4d158cfa4e864736f6c63430008140033";

type FHEKuhnPokerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEKuhnPokerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEKuhnPoker__factory extends ContractFactory {
  constructor(...args: FHEKuhnPokerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHEKuhnPoker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEKuhnPoker__factory {
    return super.connect(runner) as FHEKuhnPoker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEKuhnPokerInterface {
    return new Interface(_abi) as FHEKuhnPokerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FHEKuhnPoker {
    return new Contract(address, _abi, runner) as unknown as FHEKuhnPoker;
  }
}
