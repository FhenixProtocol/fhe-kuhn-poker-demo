/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FHEKuhnPoker,
  FHEKuhnPokerInterface,
} from "../../contracts/FHEKuhnPoker";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyAcceptedRematch",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRequestedRematch",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "GameEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "GameNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "GameNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "GameStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAction",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidGame",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPlayerB",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "ItsYourTurn",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughChips",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInGame",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPlayerInGame",
    type: "error",
  },
  {
    inputs: [],
    name: "NotYourTurn",
    type: "error",
  },
  {
    inputs: [],
    name: "OpponentHasLeft",
    type: "error",
  },
  {
    inputs: [],
    name: "OpponentStillHasTime",
    type: "error",
  },
  {
    inputs: [],
    name: "RematchCancelled",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotMessageSender",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "ChipTaken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "GameCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerA",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerB",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "GameJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum Action",
        name: "action",
        type: "uint8",
      },
    ],
    name: "PerformedGameAction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chips",
        type: "uint256",
      },
    ],
    name: "PlayerDealtIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerB",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "RematchAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerA",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "RematchCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByFold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByResignation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByShowdown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByTimeout",
    type: "event",
  },
  {
    inputs: [],
    name: "cancelSearch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "chips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chipCount",
        type: "uint256",
      },
    ],
    name: "dealMeIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "eGameCardA",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "eGameCardB",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "findGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rematchingGid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "playerA",
        type: "address",
      },
      {
        internalType: "address",
        name: "playerB",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "accepted",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "pot",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "startingPlayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "activePlayer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "timeout",
            type: "uint64",
          },
          {
            internalType: "enum Action",
            name: "action1",
            type: "uint8",
          },
          {
            internalType: "enum Action",
            name: "action2",
            type: "uint8",
          },
          {
            internalType: "enum Action",
            name: "action3",
            type: "uint8",
          },
        ],
        internalType: "struct GameState",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "cardA",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "cardB",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "enum Outcome",
            name: "outcome",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "rematchGid",
            type: "uint256",
          },
        ],
        internalType: "struct GameOutcome",
        name: "outcome",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gid",
        type: "uint256",
      },
    ],
    name: "getGame",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchingGid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerA",
            type: "address",
          },
          {
            internalType: "address",
            name: "playerB",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "accepted",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "pot",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "startingPlayer",
                type: "address",
              },
              {
                internalType: "address",
                name: "activePlayer",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "timeout",
                type: "uint64",
              },
              {
                internalType: "enum Action",
                name: "action1",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action2",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action3",
                type: "uint8",
              },
            ],
            internalType: "struct GameState",
            name: "state",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "cardA",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "cardB",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "winner",
                type: "address",
              },
              {
                internalType: "enum Outcome",
                name: "outcome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "rematchGid",
                type: "uint256",
              },
            ],
            internalType: "struct GameOutcome",
            name: "outcome",
            type: "tuple",
          },
        ],
        internalType: "struct Game",
        name: "game",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "publicKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Permission",
        name: "permission",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_gid",
        type: "uint256",
      },
    ],
    name: "getGameCard",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "data",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "utype",
            type: "uint8",
          },
        ],
        internalType: "struct SealedUint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_playerA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_playerB",
        type: "address",
      },
    ],
    name: "getPairGames",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchingGid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerA",
            type: "address",
          },
          {
            internalType: "address",
            name: "playerB",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "accepted",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "pot",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "startingPlayer",
                type: "address",
              },
              {
                internalType: "address",
                name: "activePlayer",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "timeout",
                type: "uint64",
              },
              {
                internalType: "enum Action",
                name: "action1",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action2",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action3",
                type: "uint8",
              },
            ],
            internalType: "struct GameState",
            name: "state",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "cardA",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "cardB",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "winner",
                type: "address",
              },
              {
                internalType: "enum Outcome",
                name: "outcome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "rematchGid",
                type: "uint256",
              },
            ],
            internalType: "struct GameOutcome",
            name: "outcome",
            type: "tuple",
          },
        ],
        internalType: "struct Game[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserGameState",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rematchingGid",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "playerA",
                type: "address",
              },
              {
                internalType: "address",
                name: "playerB",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "accepted",
                    type: "bool",
                  },
                  {
                    internalType: "uint8",
                    name: "pot",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "startingPlayer",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "activePlayer",
                    type: "address",
                  },
                  {
                    internalType: "uint64",
                    name: "timeout",
                    type: "uint64",
                  },
                  {
                    internalType: "enum Action",
                    name: "action1",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Action",
                    name: "action2",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Action",
                    name: "action3",
                    type: "uint8",
                  },
                ],
                internalType: "struct GameState",
                name: "state",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "gid",
                    type: "uint256",
                  },
                  {
                    internalType: "uint8",
                    name: "cardA",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "cardB",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "winner",
                    type: "address",
                  },
                  {
                    internalType: "enum Outcome",
                    name: "outcome",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "rematchGid",
                    type: "uint256",
                  },
                ],
                internalType: "struct GameOutcome",
                name: "outcome",
                type: "tuple",
              },
            ],
            internalType: "struct Game",
            name: "game",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "selfChips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "opponentChips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeGid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchGid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "selfGid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "opponentGid",
            type: "uint256",
          },
        ],
        internalType: "struct FHEKuhnPoker.UserGameState",
        name: "gameState",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserGames",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchingGid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerA",
            type: "address",
          },
          {
            internalType: "address",
            name: "playerB",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "accepted",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "pot",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "startingPlayer",
                type: "address",
              },
              {
                internalType: "address",
                name: "activePlayer",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "timeout",
                type: "uint64",
              },
              {
                internalType: "enum Action",
                name: "action1",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action2",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action3",
                type: "uint8",
              },
            ],
            internalType: "struct GameState",
            name: "state",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "cardA",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "cardB",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "winner",
                type: "address",
              },
              {
                internalType: "enum Outcome",
                name: "outcome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "rematchGid",
                type: "uint256",
              },
            ],
            internalType: "struct GameOutcome",
            name: "outcome",
            type: "tuple",
          },
        ],
        internalType: "struct Game[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Action",
        name: "action",
        type: "uint8",
      },
    ],
    name: "performAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rematch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timeoutDuration",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeoutOpponent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userActiveGame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040526000600255600380546001600160401b031916607817815562000028906200015a565b6004556200003760026200015a565b6005556200004660016200015a565b6006556000600e553480156200005b57600080fd5b506040805180820182526011815270233432b734bc102832b936b4b9b9b4b7b760791b602080830191909152825180840190935260038352620312e360ec1b9083015290620000ac8260006200016f565b61012052620000bd8160016200016f565b61014052815160208084019190912060e052815190820120610100524660a0526200014b60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052620005a2565b600062000169828280620001a6565b92915050565b60006020835110156200018f5762000187836200023d565b905062000169565b816200019c848262000358565b5060ff9392505050565b60006060608063ba19ac28620001bc8762000289565b86866040518463ffffffff1660e01b8152600401620001de9392919062000478565b600060405180830381865afa158015620001fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002269190810190620004a9565b905062000234816020015190565b95945050505050565b600080829050601f8151111562000274578260405163305a27a960e01b81526004016200026b919062000561565b60405180910390fd5b805162000281826200057d565b179392505050565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002de57607f821691505b602082108103620002ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035357600081815260208120601f850160051c810160208610156200032e5750805b601f850160051c820191505b818110156200034f578281556001016200033a565b5050505b505050565b81516001600160401b03811115620003745762000374620002b3565b6200038c81620003858454620002c9565b8462000305565b602080601f831160018114620003c45760008415620003ab5750858301515b600019600386901b1c1916600185901b1785556200034f565b600085815260208120601f198616915b82811015620003f557888601518255948401946001909101908401620003d4565b5085821015620004145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60005b838110156200044157818101518382015260200162000427565b50506000910152565b600081518084526200046481602086016020860162000424565b601f01601f19169290920160200192915050565b6060815260006200048d60608301866200044a565b905060ff841660208301528260030b6040830152949350505050565b600060208284031215620004bc57600080fd5b81516001600160401b0380821115620004d457600080fd5b818401915084601f830112620004e957600080fd5b815181811115620004fe57620004fe620002b3565b604051601f8201601f19908116603f01168101908382118183101715620005295762000529620002b3565b816040528281528760208487010111156200054357600080fd5b6200055683602083016020880162000424565b979650505050505050565b6020815260006200057660208301846200044a565b9392505050565b80516020808301519190811015620002ff5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516141fd620005fd60003960006121e5015260006121b301526000612b8901526000612b6101526000612abc01526000612ae601526000612b1001526141fd6000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80635fbac498116100b857806385d19e1a1161007c57806385d19e1a146102b057806386391f88146102db578063a2f77bcc146102fb578063d544577d1461031b578063f7669a6a14610323578063fdcd4c1c1461032b57600080fd5b80635fbac4981461022d57806369652fcf1461024d57806375f20540146102555780637d130ac81461027557806384b0196e1461029557600080fd5b80632ee9191d116100ff5780632ee9191d146101d65780632f04c3f4146101e957806333606708146102095780633a95ae0d1461021257806340d453431461021a57600080fd5b8063117a5b901461013c578063120aace61461016a578063140a2e441461018a5780631c9a2337146101a15780632123a0cb146101b6575b600080fd5b61014f61014a3660046139cd565b610333565b60405161016196959493929190613ae5565b60405180910390f35b61017d610178366004613b42565b6104f9565b6040516101619190613bb3565b610193600e5481565b604051908152602001610161565b6101b46101af366004613c02565b6107ca565b005b6101c96101c4366004613b42565b610987565b6040516101619190613c23565b6101b46101e43660046139cd565b610e42565b6101fc6101f7366004613d13565b610e9e565b6040516101619190613e23565b61019360025481565b6101b461124d565b61017d610228366004613e58565b6112c7565b61019361023b3660046139cd565b60096020526000908152604090205481565b6101b46115c1565b610193610263366004613b42565b600b6020526000908152604090205481565b610193610283366004613b42565b60076020526000908152604090205481565b61029d611679565b6040516101619796959493929190613e8b565b6003546102c3906001600160401b031681565b6040516001600160401b039091168152602001610161565b6101936102e93660046139cd565b600a6020526000908152604090205481565b61030e6103093660046139cd565b6116bf565b6040516101619190613f21565b6101b46118b9565b6101b46119a1565b6101b4611b8d565b6008602090815260009182526040918290208054600182015460028301546003840154865161010080820189526004808801805460ff8082161515865293810484169a85019a909a52620100009099046001600160a01b039081169a84019a909a526005880154808b1660608501526001600160401b03600160a01b82041660808501529699959894861697959093169591939260a0850192600160e01b9004909116908111156103e6576103e66139e6565b60048111156103f7576103f76139e6565b815260200160018201601d9054906101000a900460ff16600481111561041f5761041f6139e6565b6004811115610430576104306139e6565b815260200160018201601e9054906101000a900460ff166004811115610458576104586139e6565b6004811115610469576104696139e6565b9052506040805160c0810182526006840180548252600785015460ff808216602085015261010082048116948401949094526001600160a01b03620100008204166060840152939493919290916080840191600160b01b9091041660058111156104d5576104d56139e6565b60058111156104e6576104e66139e6565b8152602001600282015481525050905086565b6001600160a01b0381166000908152600c602052604081206060919061051e90611cea565b9050806001600160401b0381111561053857610538613c7e565b60405190808252806020026020018201604052801561057157816020015b61055e6138d2565b8152602001906001900390816105565790505b50915060005b818110156107c3576001600160a01b0384166000908152600c60205260408120600891906105a59084611cfa565b81526020808201929092526040908101600020815160c0810183528154815260018201548185015260028201546001600160a01b039081168285015260038301548116606080840191909152845161010081810187526004808701805460ff8082161515865293810484169a85019a909a52620100009099048516978301979097526005860154938416928201929092526001600160401b03600160a01b84041660808281019190915293969495938701949093909260a0850192600160e01b9091041690811115610679576106796139e6565b600481111561068a5761068a6139e6565b815260200160018201601d9054906101000a900460ff1660048111156106b2576106b26139e6565b60048111156106c3576106c36139e6565b815260200160018201601e9054906101000a900460ff1660048111156106eb576106eb6139e6565b60048111156106fc576106fc6139e6565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b909104166005811115610770576107706139e6565b6005811115610781576107816139e6565b8152602001600282015481525050815250508382815181106107a5576107a5613f30565b602002602001018190525080806107bb90613f5c565b915050610577565b5050919050565b336000908152600b602052604081205490036107f95760405163218286cb60e11b815260040160405180910390fd5b336000908152600b6020908152604080832054835260089091529020600481015460ff1661083a57604051633a5f7b5760e01b815260040160405180910390fd5b60006007820154600160b01b900460ff16600581111561085c5761085c6139e6565b1461087a576040516308426a3f60e11b815260040160405180910390fd5b60058101546001600160a01b031633146108a757604051631cc191eb60e31b815260040160405180910390fd5b805460405133907fd23f410feb433bf52f5f38608c94bfba4272af89e01381eb029945668cc40d53906108db908690613f75565b60405180910390a360006005820154600160e01b900460ff166004811115610905576109056139e6565b03610918576109148183611d0d565b5050565b60026005820154600160e01b900460ff16600481111561093a5761093a6139e6565b03610949576109148183611d9f565b60006005820154600160e81b900460ff16600481111561096b5761096b6139e6565b0361097a576109148183611e18565b6109148183611e88565b50565b61098f61398a565b6001600160a01b0382166000818152600b602090815260408083205460a086019081529383526007825282205490840152905190036109cd57919050565b60a0808201516000908152600860209081526040808320815160c0810183528154815260018201548185015260028201546001600160a01b039081168285015260038301548116606080840191909152845161010081810187526004808701805460ff8082161515865293810484169a85019a909a52620100009099048516978301979097526005860154938416928201929092526001600160401b03600160a01b84041660808281019190915297989397949694880195909493850192600160e01b900490911690811115610aa557610aa56139e6565b6004811115610ab657610ab66139e6565b815260200160018201601d9054906101000a900460ff166004811115610ade57610ade6139e6565b6004811115610aef57610aef6139e6565b815260200160018201601e9054906101000a900460ff166004811115610b1757610b176139e6565b6004811115610b2857610b286139e6565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b909104166005811115610b9c57610b9c6139e6565b6005811115610bad57610bad6139e6565b81526002919091015460209091015290525060808101515190915015610e0f5760a0808301516060840181905282820151909101516080840152600090610bf49085611eaf565b6001600160a01b038082166000818152600b602090815260408083205460c0808b01919091529383526007825280832054898201526060808a015184526008835292819020815194850182528054855260018101548584015260028101548616858301526003810154861685850152815161010081810184526004808401805460ff80821615158652938104841697850197909752620100009096048916948301949094526005830154978816958201959095526001600160401b03600160a01b88041660808281019190915297985094969095908701949360a0850192600160e01b9092041690811115610ceb57610ceb6139e6565b6004811115610cfc57610cfc6139e6565b815260200160018201601d9054906101000a900460ff166004811115610d2457610d246139e6565b6004811115610d3557610d356139e6565b815260200160018201601e9054906101000a900460ff166004811115610d5d57610d5d6139e6565b6004811115610d6e57610d6e6139e6565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b909104166005811115610de257610de26139e6565b6005811115610df357610df36139e6565b8152600291909101546020909101529052508352509092915050565b602081015115610e3c5760208101516060830181905260a08301516080840152600090610bf49085611eaf565b50919050565b3360009081526007602052604081208054839290610e61908490613f83565b909155505060405181815233907fec5c270dc3e37271f6b1ee63cbba191d44debdfe43ef27ebdc3032d2b747e4349060200160405180910390a250565b604080518082019091526060815260006020820152826000610f147f6bdaeb2d29561f159c7ef98b16b27015fb2aeb87209c7ee656226d912f59927d8360000151604051602001610ef9929190918252602082015260400190565b60405160208183030381529060405280519060200120611f13565b90506000610f26828460200151611f40565b90506001600160a01b0381163314610f5157604051633093a27760e01b815260040160405180910390fd5b84600254811115610f75576040516357e25a0960e01b815260040160405180910390fd5b610fa46040518060400160405280600d81526020016c11d95d0819d85b594818d85c99609a1b81525033611f6a565b6000868152600860209081526040808320815160c0810183528154815260018201548185015260028201546001600160a01b039081168285015260038301548116606080840191909152845161010081810187526004808701805460ff8082161515865293810484169a85019a909a52620100009099048516978301979097526005860154938416928201929092526001600160401b03600160a01b84041660808281019190915293969495938701949093909260a0850192600160e01b9091041690811115611076576110766139e6565b6004811115611087576110876139e6565b815260200160018201601d9054906101000a900460ff1660048111156110af576110af6139e6565b60048111156110c0576110c06139e6565b815260200160018201601e9054906101000a900460ff1660048111156110e8576110e86139e6565b60048111156110f9576110f96139e6565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b90910416600581111561116d5761116d6139e6565b600581111561117e5761117e6139e6565b81526002919091015460209091015290525060408101519091506001600160a01b031633036111c95787516000888152600960205260409020546111c191611f7c565b955050611243565b60608101516001600160a01b031633036111f75787516000888152600a60205260409020546111c191611f7c565b61122a604051806040016040528060128152602001714765742067616d65206361726420646f6e6560701b815250611f9b565b6040516339e5f32960e21b815260040160405180910390fd5b5050505092915050565b336000908152600b6020526040812054900361127c5760405163218286cb60e11b815260040160405180910390fd5b336000908152600b6020908152604080832054835260089091529020600481015460ff16156112be57604051631d8bc98160e21b815260040160405180910390fd5b61098481611fa4565b60606000806112d6858561205e565b6001600160a01b038083166000908152600d6020908152604080832093851683529290529081209294509092509061130d90611cea565b9050806001600160401b0381111561132757611327613c7e565b60405190808252806020026020018201604052801561136057816020015b61134d6138d2565b8152602001906001900390816113455790505b50935060005b81811015611243576001600160a01b038085166000908152600d602090815260408083209387168352929052908120600891906113a39084611cfa565b81526020808201929092526040908101600020815160c0810183528154815260018201548185015260028201546001600160a01b039081168285015260038301548116606080840191909152845161010081810187526004808701805460ff8082161515865293810484169a85019a909a52620100009099048516978301979097526005860154938416928201929092526001600160401b03600160a01b84041660808281019190915293969495938701949093909260a0850192600160e01b9091041690811115611477576114776139e6565b6004811115611488576114886139e6565b815260200160018201601d9054906101000a900460ff1660048111156114b0576114b06139e6565b60048111156114c1576114c16139e6565b815260200160018201601e9054906101000a900460ff1660048111156114e9576114e96139e6565b60048111156114fa576114fa6139e6565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b90910416600581111561156e5761156e6139e6565b600581111561157f5761157f6139e6565b8152602001600282015481525050815250508582815181106115a3576115a3613f30565b602002602001018190525080806115b990613f5c565b915050611366565b336000908152600b602052604081205490036115f05760405163218286cb60e11b815260040160405180910390fd5b336000908152600b6020908152604080832054835260089091528120906007820154600160b01b900460ff16600581111561162d5761162d6139e6565b1461164b576040516308426a3f60e11b815260040160405180910390fd5b600481015460ff1661167057604051633a5f7b5760e01b815260040160405180910390fd5b61098481612092565b60006060806000806000606061168d6121ac565b6116956121de565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6116c76138d2565b600082815260086020908152604091829020825160c0810184528154815260018201548184015260028201546001600160a01b039081168286015260038301548116606080840191909152855161010081810188526004808701805460ff80821615158652938104841699850199909952620100009098048516988301989098526005860154938416928201929092526001600160401b03600160a01b840416608082810191909152939694959387019490939260a0850192600160e01b9091041690811115611799576117996139e6565b60048111156117aa576117aa6139e6565b815260200160018201601d9054906101000a900460ff1660048111156117d2576117d26139e6565b60048111156117e3576117e36139e6565b815260200160018201601e9054906101000a900460ff16600481111561180b5761180b6139e6565b600481111561181c5761181c6139e6565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b909104166005811115611890576118906139e6565b60058111156118a1576118a16139e6565b81526002919091015460209091015290525092915050565b6118e36040518060400160405280600981526020016846696e642047616d6560b81b815250611f9b565b336000908152600b60205260409020541561194257336000908152600b602090815260408083205483526008909152902061191d9061220b565b336000908152600b60209081526040808320548352600890915290206119429061222a565b600e546000036119855761197d6040518060400160405280601081526020016f437265617465204f70656e2047616d6560801b815250611f9b565b610984612263565b600e54600090815260086020526040902061199f90612340565b565b336000908152600b602052604081205490036119d05760405163218286cb60e11b815260040160405180910390fd5b336000908152600b6020908152604080832054835260089091529020600481015460ff16611a1157604051633a5f7b5760e01b815260040160405180910390fd5b60006007820154600160b01b900460ff166005811115611a3357611a336139e6565b14611a51576040516308426a3f60e11b815260040160405180910390fd5b6005810154336001600160a01b0390911603611a805760405163cd84c54560e01b815260040160405180910390fd5b6005810154600160a01b90046001600160401b0316421015611ab5576040516356795e7160e11b815260040160405180910390fd5b6005810180546001600160a01b0319169055600780820180546201000033810262010000600160b81b031990921691909117600360b01b1791829055600484015491046001600160a01b0316600090815260209290925260408220805460ff61010090930492909216929091611b2c908490613f83565b909155505080546007820154600483015460405161010090910460ff168152620100009091046001600160a01b0316907ff2853373dee556a3867a315163b8c1250e471d33af19641542d76e7be76d5b20906020015b60405180910390a350565b336000908152600b60205260408120549003611bbc5760405163218286cb60e11b815260040160405180910390fd5b336000908152600b6020908152604080832054835260089091528120906007820154600160b01b900460ff166005811115611bf957611bf96139e6565b03611c1757604051638f86c6b360e01b815260040160405180910390fd5b6000611c27826000015433611eaf565b6008830154909150600003611c875781546001600160a01b0382166000908152600b602052604090205414611c6f57604051630741cddb60e11b815260040160405180910390fd5b8154611c7b90826123e5565b60089092019190915550565b60088281015460009081526020919091526040902060046007820154600160b01b900460ff166005811115611cbe57611cbe6139e6565b03611cdc57604051633b963c9760e11b815260040160405180910390fd5b611ce581612463565b505050565b6000611cf4825490565b92915050565b6000611d068383612509565b9392505050565b60058201805482919060ff60e01b1916600160e01b836004811115611d3457611d346139e6565b02179055506002816004811115611d4d57611d4d6139e6565b03611d6457611d5b82612533565b61091482612656565b6001816004811115611d7857611d786139e6565b03611d865761091482612656565b604051634a7f394f60e01b815260040160405180910390fd5b60058201805482919060ff60e81b1916600160e81b836004811115611dc657611dc66139e6565b02179055506004816004811115611ddf57611ddf6139e6565b03611df657611ded82612533565b610914826126fd565b6003816004811115611e0a57611e0a6139e6565b03611d865761091482612933565b60058201805482919060ff60e81b1916600160e81b836004811115611e3f57611e3f6139e6565b02179055506002816004811115611e5857611e586139e6565b03611e6657611d5b82612533565b6001816004811115611e7a57611e7a6139e6565b03611d8657610914826126fd565b60058201805482919060ff60f01b1916600160f01b836004811115611dc657611dc66139e6565b6000828152600860205260408120600201546001600160a01b03838116911614611ef3576000838152600860205260409020600201546001600160a01b0316611d06565b50506000908152600860205260409020600301546001600160a01b031690565b6000611cf4611f20612aaf565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080611f508686612bda565b925092509250611f608282612c27565b5090949350505050565b61091482611f7783612ce5565b612eb4565b604080518082019091526060815260006020820152611d068383612f20565b61098481612f5b565b6007810180546004919060ff60b01b1916600160b01b8302179055506004810154336000908152600760205260408120805461010090930460ff1692909190611fee908490613f83565b90915550508054336000908152600c6020526040902061200d91612fb2565b50336000908152600b6020526040812055600e5481540361202e576000600e555b805460405133907fecf51bb2698f4bba616fb07332e1d861a5430f472e11538556f2823d33ecb15d90600090a350565b600080826001600160a01b0316846001600160a01b0316101561208557508290508161208b565b50819050825b9250929050565b600580820180546001600160a01b031916905560078201805460ff60b01b1916600160b01b83021790555060028101546001600160a01b031633146120e45760028101546001600160a01b03166120f3565b60038101546001600160a01b03165b6007828101805462010000600160b01b031916620100006001600160a01b039485168102919091179182905560048501549104909216600090815260209190915260408120805461010090930460ff1692909190612152908490613f83565b909155505080546007820154600483015460405161010090910460ff168152620100009091046001600160a01b0316907f147c1b54274befbb22c45bfad77ac0dd59009b6e592020d25e642f5ac2022f0090602001611b82565b60606121d97f00000000000000000000000000000000000000000000000000000000000000006000612fbe565b905090565b60606121d97f00000000000000000000000000000000000000000000000000000000000000006001612fbe565b806001015460000361221a5750565b600481015460ff16156112be5750565b600481015460ff166122395750565b60006007820154600160b01b900460ff16600581111561225b5761225b6139e6565b146116705750565b600061229b60405180604001604052806015815260200174437265617465204f70656e2047616d6520426f647960581b815250611f9b565b6122a3613069565b336000908152600c602052604090209091506122bf90826130ec565b50600e819055336000818152600b6020526040808220849055518392917f306841c3fce8498c2d9b7194b8da4c04d03847394e237b625ce6d029b107f07791a361233d6040518060400160405280601a81526020017f437265617465204f70656e2047616d6520426f647920446f6e65000000000000815250611f9b565b90565b6002810154336001600160a01b039091160361236f57604051630793469160e51b815260040160405180910390fd5b612378816130f8565b8054336000908152600c60205260409020612392916130ec565b506000600e8190558154338252600b60205260409091208190556123b59061322b565b805460405133907fc7f886847371dba98b78e0d0d59e29f4abfaf6e953d6897a761992cb2627e68790600090a350565b60006123ef613069565b60008181526008602090815260408083206001810188905560030180546001600160a01b0319166001600160a01b03881617905533808452600b90925280832084905551929350839290917fbbe33ac9017c7f0d5244dc1f205e11ca9a813daa7c69febfdd87d774f0c7566591a392915050565b61246c816130f8565b805460028201546001600160a01b03166000908152600c60205260409020612493916130ec565b50805460038201546001600160a01b03166000908152600c602052604090206124bb916130ec565b508054336000908152600b602052604090208190556124d99061322b565b805460405133907f211b27e39a49d8b83e5e19b450797dee8b5d5a50058b146aa47408a37304129790600090a350565b600082600001828154811061252057612520613f30565b9060005260206000200154905092915050565b61255e6040518060400160405280600a81526020016954616b6520436869707360b01b815250611f9b565b336000908152600760205260409020546001111561258f5760405163103f2c3560e21b815260040160405180910390fd5b3360009081526007602052604081208054600192906125af908490613f96565b90915550506004810180546001919082906125d3908290610100900460ff16613fa9565b92506101000a81548160ff021916908360ff1602179055508060000154336001600160a01b03167f7223189244c0c472afd54aec796b8d40651ee7c5b10e8907ace7720cba1448af60405160405180910390a36109846040518060400160405280600f81526020016e54616b6520436869707320446f6e6560881b815250611f9b565b60035461266c906001600160401b031642613fc2565b6005820180546001600160401b0392909216600160a01b0267ffffffffffffffff60a01b198316811790915560028301546001600160a01b03918216928216929092179116146126c95760028101546001600160a01b03166126d8565b60038101546001600160a01b03165b60059190910180546001600160a01b0319166001600160a01b03909216919091179055565b6127266040518060400160405280600881526020016729a427aba227aba760c11b815250611f9b565b6005810180546001600160e01b031916905560408051808201909152600f81526e64656372797074732073746172747360881b602082015261276790611f9b565b805460009081526009602052604090205461278190613296565b60078201805460ff191660ff9290921691909117905580546000908152600a60205260409020546127b190613296565b60078201805460ff929092166101000261ff001990921691909117905560408051808201909152600e81526d646563727970747320656e646e7360901b60208201526127fc90611f9b565b600781015460ff610100820481169116116128245760038101546001600160a01b0316612833565b60028101546001600160a01b03165b6007828101805462010000600160b01b031916620100006001600160a01b039485168102919091179182905560048501549104909216600090815260209190915260408120805461010090930460ff1692909190612892908490613f83565b909155505060078101805460ff60b01b1916600160b01b1790819055815460048301546040805161010090920460ff1682525191926201000090046001600160a01b0316917f6b3f6c5f959ad5b6826509086e36a0928378a8b8cc000b7d9789a774fda2f0039181900360200190a3610984604051806040016040528060118152602001701cda1bddd91bdddb88199a5b9a5cda1959607a1b815250611f9b565b6005810180546001600160e01b0319169055805460009081526009602052604090205461295f90613296565b60078201805460ff191660ff9290921691909117905580546000908152600a602052604090205461298f90613296565b60078201805461ff00191661010060ff939093169290920291909117905560028101546001600160a01b031633146129d45760028101546001600160a01b03166129e3565b60038101546001600160a01b03165b6007828101805462010000600160b01b031916620100006001600160a01b039485168102919091179182905560048501549104909216600090815260209190915260408120805461010090930460ff1692909190612a42908490613f83565b909155505060078101805460ff60b01b1916600160b11b17908190558154600483015460405161010090910460ff16815290916201000090046001600160a01b0316907f398f5677dc9617d4ce2fe16114560f1b001e5ab80a5185c3a6ad3e285864dc1b90602001611b82565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015612b0857507f000000000000000000000000000000000000000000000000000000000000000046145b15612b3257507f000000000000000000000000000000000000000000000000000000000000000090565b6121d9604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60008060008351604103612c145760208401516040850151606086015160001a612c06888285856132a1565b955095509550505050612c20565b50508151600091506002905b9250925092565b6000826003811115612c3b57612c3b6139e6565b03612c44575050565b6001826003811115612c5857612c586139e6565b03612c765760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115612c8a57612c8a6139e6565b03612cb05760405163fce698f760e01b8152600481018290526024015b60405180910390fd5b6003826003811115612cc457612cc46139e6565b03610914576040516335e2f38360e21b815260048101829052602401612ca7565b604080518082018252601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201528151602a808252606082810190945284841b91600091602082018180368337019050509050600360fc1b81600081518110612d4857612d48613f30565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612d7757612d77613f30565b60200101906001600160f81b031916908160001a90535060005b6014811015612eab57836004848360148110612daf57612daf613f30565b1a60f81b6001600160f81b031916901c60f81c60ff1681518110612dd557612dd5613f30565b01602001516001600160f81b03191682612df0836002613fe2565b612dfb906002613f83565b81518110612e0b57612e0b613f30565b60200101906001600160f81b031916908160001a90535083838260148110612e3557612e35613f30565b825191901a600f16908110612e4c57612e4c613f30565b01602001516001600160f81b03191682612e67836002613fe2565b612e72906003613f83565b81518110612e8257612e82613f30565b60200101906001600160f81b031916908160001a90535080612ea381613f5c565b915050612d91565b50949350505050565b600060405180604001604052806004815260200163038181d160e51b815250836040518060400160405280600581526020016401038189d160dd1b81525084604051602001612f069493929190613ff9565b6040516020818303038152906040529050611ce581612f5b565b6040805180820190915260608152600060208201526040518060400160405280612f4a8585613370565b815260006020909101529392505050565b60405163104c13eb60e21b81526080906341304fac90612f7f908490600401614050565b60006040518083038186803b158015612f9757600080fd5b505afa158015612fab573d6000803e3d6000fd5b5050505050565b6000611d068383613399565b606060ff8314612fd857612fd183613493565b9050611cf4565b818054612fe490614063565b80601f016020809104026020016040519081016040528092919081815260200182805461301090614063565b801561305d5780601f106130325761010080835404028352916020019161305d565b820191906000526020600020905b81548152906001019060200180831161304057829003601f168201915b50505050509050611cf4565b600061309d6040518060400160405280601181526020017021b932b0ba329033b0b6b29034b73732b960791b815250611f9b565b6001600260008282546130b09190613f83565b909155505060028054600081815260086020526040902090815590810180546001600160a01b031916331790556130e681612533565b54919050565b6000611d0683836134d2565b61310181612533565b60048101805460ff19166001179055600380820180546001600160a01b0319163317905554613139906001600160401b031642613fc2565b600582018054600284015460048501805462010000600160b01b0319166001600160a01b039283166201000090810291909117918290559004166001600160e01b03199091166001600160401b0393909316600160a01b026001600160a01b031916929092179190911790556000806131b0613521565b90506131c76004548261352d90919063ffffffff16565b83546000908152600960205260408120919091556006546005546131fe91906131f8906131f2613521565b9061352d565b90613539565b600454909150613212906131f28484613539565b93546000908152600a6020526040902093909355505050565b60008181526008602052604081206002810154600390910154829161325c916001600160a01b03918216911661205e565b6001600160a01b038083166000908152600d60209081526040808320938516835292905220919350915061329090846130ec565b50505050565b6000611cf482613545565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156132dc5750600091506003905082613366565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015613330573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661335c57506000925060019150829050613366565b9250600091508190505b9450945094915050565b606082613384576133816000613552565b92505b8261339160008285613560565b949350505050565b600081815260018301602052604081205480156134825760006133bd600183613f96565b85549091506000906133d190600190613f96565b90508082146134365760008660000182815481106133f1576133f1613f30565b906000526020600020015490508087600001848154811061341457613414613f30565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061344757613447614097565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611cf4565b6000915050611cf4565b5092915050565b606060006134a0836135f1565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600081815260018301602052604081205461351957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611cf4565b506000611cf4565b60006121d96000613619565b6000611d068383613628565b6000611d06838361366e565b6000611cf48260806136a9565b6000611cf48260008061374b565b6060608063a1848ff385613573866137da565b6040805160208101889052016040516020818303038152906040526040518463ffffffff1660e01b81526004016135ac939291906140ad565b600060405180830381865afa1580156135c9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613391919081019061410b565b600060ff8216601f811115611cf457604051632cd44ac360e21b815260040160405180910390fd5b600080611d0660008085613804565b60008261363c576136396000613552565b92505b8161364e5761364b6000613552565b91505b82826000613664818484608063eb376804613849565b9695505050505050565b6000826136825761367f6000613552565b92505b81613694576136916000613552565b91505b828260006136648184846080622df619613849565b6000826136bd576136ba6000613552565b92505b60ff82168360006136cd826137da565b604051637c4697ab60e01b8152909150600090608090637c4697ab906136fb90849086908990600401614153565b602060405180830381865afa158015613718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061373c919061417f565b9050805b979650505050505050565b60006060608063ba19ac2861375f876137da565b86866040518463ffffffff1660e01b815260040161377f93929190614198565b600060405180830381865afa15801561379c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526137c4919081019061410b565b90506137d1816020015190565b95945050505050565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b604051635531374560e11b815260ff841660048201526001600160401b0383166024820152600382900b6044820152600090819060809063aa626e8a9060640161377f565b60006060838388613859896137da565b613862896137da565b6040518463ffffffff1660e01b8152600401613880939291906140ad565b600060405180830381865afa15801561389d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526138c5919081019061410b565b9050613740816020015190565b6040518060c00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001613952604080516101008101825260008082526020820181905291810182905260608101829052608081018290529060a08201908152602001600081526020016000905290565b81526040805160c08101825260008082526020828101829052928201819052606082018190526080820181905260a082015291015290565b6040518060e0016040528061399d6138d2565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000602082840312156139df57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60058110613a0c57613a0c6139e6565b9052565b80511515825260ff6020820151166020830152604081015160018060a01b03808216604085015280606084015116606085015250506001600160401b03608082015116608083015260a0810151613a6a60a08401826139fc565b5060c0810151613a7d60c08401826139fc565b5060e0810151611ce560e08401826139fc565b8051825260ff602082015116602083015260ff604082015116604083015260018060a01b036060820151166060830152608081015160068110613ad557613ad56139e6565b608083015260a090810151910152565b868152602081018690526001600160a01b038581166040830152841660608201526102408101613b186080830185613a10565b613740610180830184613a90565b80356001600160a01b0381168114613b3d57600080fd5b919050565b600060208284031215613b5457600080fd5b611d0682613b26565b8051825260208101516020830152604081015160018060a01b03808216604085015280606084015116606085015250506080810151613b9f6080840182613a10565b5060a0810151611ce5610180840182613a90565b6020808252825182820181905260009190848201906040850190845b81811015613bf657613be2838551613b5d565b928401926102409290920191600101613bcf565b50909695505050505050565b600060208284031215613c1457600080fd5b813560058110611d0657600080fd5b600061030082019050613c37828451613b5d565b60208301516102408301526040830151610260830152606083015161028083015260808301516102a083015260a08301516102c083015260c0909201516102e09091015290565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715613cb657613cb6613c7e565b60405290565b604051601f8201601f191681016001600160401b0381118282101715613ce457613ce4613c7e565b604052919050565b60006001600160401b03821115613d0557613d05613c7e565b50601f01601f191660200190565b60008060408385031215613d2657600080fd5b82356001600160401b0380821115613d3d57600080fd5b9084019060408287031215613d5157600080fd5b613d59613c94565b8235815260208084013583811115613d7057600080fd5b80850194505087601f850112613d8557600080fd5b83359250613d9a613d9584613cec565b613cbc565b8381528882858701011115613dae57600080fd5b8382860183830137600093810182019390935281810192909252969401359450505050565b60005b83811015613dee578181015183820152602001613dd6565b50506000910152565b60008151808452613e0f816020860160208601613dd3565b601f01601f19169290920160200192915050565b602081526000825160406020840152613e3f6060840182613df7565b905060ff60208501511660408401528091505092915050565b60008060408385031215613e6b57600080fd5b613e7483613b26565b9150613e8260208401613b26565b90509250929050565b60ff60f81b881681526000602060e081840152613eab60e084018a613df7565b8381036040850152613ebd818a613df7565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015613f0f57835183529284019291840191600101613ef3565b50909c9b505050505050505050505050565b6102408101611cf48284613b5d565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201613f6e57613f6e613f46565b5060010190565b60208101611cf482846139fc565b80820180821115611cf457611cf4613f46565b81810381811115611cf457611cf4613f46565b60ff8181168382160190811115611cf457611cf4613f46565b6001600160401b0381811683821601908082111561348c5761348c613f46565b8082028115828204841417611cf457611cf4613f46565b6000855161400b818460208a01613dd3565b85519083019061401f818360208a01613dd3565b8551910190614032818360208901613dd3565b8451910190614045818360208801613dd3565b019695505050505050565b602081526000611d066020830184613df7565b600181811c9082168061407757607f821691505b602082108103610e3c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60ff841681526060602082015260006140c96060830185613df7565b82810360408401526136648185613df7565b60006140e9613d9584613cec565b90508281528383830111156140fd57600080fd5b611d06836020830184613dd3565b60006020828403121561411d57600080fd5b81516001600160401b0381111561413357600080fd5b8201601f8101841361414457600080fd5b613391848251602084016140db565b60ff8416815260606020820152600061416f6060830185613df7565b9050826040830152949350505050565b60006020828403121561419157600080fd5b5051919050565b6060815260006141ab6060830186613df7565b905060ff841660208301528260030b604083015294935050505056fea26469706673582212209877e1ae04b457671b626737d5d1b56f8d40bd4a4460cb19fb6c94b0e86ea13364736f6c63430008140033";

type FHEKuhnPokerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEKuhnPokerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEKuhnPoker__factory extends ContractFactory {
  constructor(...args: FHEKuhnPokerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHEKuhnPoker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEKuhnPoker__factory {
    return super.connect(runner) as FHEKuhnPoker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEKuhnPokerInterface {
    return new Interface(_abi) as FHEKuhnPokerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FHEKuhnPoker {
    return new Contract(address, _abi, runner) as unknown as FHEKuhnPoker;
  }
}
