/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FHEKuhnPoker,
  FHEKuhnPokerInterface,
} from "../../contracts/FHEKuhnPoker";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyAcceptedRematch",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRequestedRematch",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "GameEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "GameNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "GameNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "GameStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAction",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidGame",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPlayerB",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "ItsYourTurn",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughChips",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInGame",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPlayerInGame",
    type: "error",
  },
  {
    inputs: [],
    name: "NotYourTurn",
    type: "error",
  },
  {
    inputs: [],
    name: "OpponentHasLeft",
    type: "error",
  },
  {
    inputs: [],
    name: "OpponentStillHasTime",
    type: "error",
  },
  {
    inputs: [],
    name: "RematchCancelled",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotMessageSender",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "ChipTaken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "GameCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerA",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerB",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "GameJoined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum Action",
        name: "action",
        type: "uint8",
      },
    ],
    name: "PerformedGameAction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chips",
        type: "uint256",
      },
    ],
    name: "PlayerDealtIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerB",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "RematchAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "playerA",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
    ],
    name: "RematchCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByFold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByResignation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByShowdown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pot",
        type: "uint256",
      },
    ],
    name: "WonByTimeout",
    type: "event",
  },
  {
    inputs: [],
    name: "cancelSearch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "chips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chipCount",
        type: "uint256",
      },
    ],
    name: "dealMeIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "findGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "uint256",
        name: "gid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rematchingGid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "playerA",
        type: "address",
      },
      {
        internalType: "address",
        name: "playerB",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "accepted",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "pot",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "startingPlayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "activePlayer",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "timeout",
            type: "uint64",
          },
          {
            internalType: "enum Action",
            name: "action1",
            type: "uint8",
          },
          {
            internalType: "enum Action",
            name: "action2",
            type: "uint8",
          },
          {
            internalType: "enum Action",
            name: "action3",
            type: "uint8",
          },
        ],
        internalType: "struct GameState",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "cardA",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "cardB",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "enum Outcome",
            name: "outcome",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "rematchGid",
            type: "uint256",
          },
        ],
        internalType: "struct GameOutcome",
        name: "outcome",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gid",
        type: "uint256",
      },
    ],
    name: "getGame",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchingGid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerA",
            type: "address",
          },
          {
            internalType: "address",
            name: "playerB",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "accepted",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "pot",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "startingPlayer",
                type: "address",
              },
              {
                internalType: "address",
                name: "activePlayer",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "timeout",
                type: "uint64",
              },
              {
                internalType: "enum Action",
                name: "action1",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action2",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action3",
                type: "uint8",
              },
            ],
            internalType: "struct GameState",
            name: "state",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "cardA",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "cardB",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "winner",
                type: "address",
              },
              {
                internalType: "enum Outcome",
                name: "outcome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "rematchGid",
                type: "uint256",
              },
            ],
            internalType: "struct GameOutcome",
            name: "outcome",
            type: "tuple",
          },
        ],
        internalType: "struct Game",
        name: "game",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "publicKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct Permission",
        name: "permission",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_gid",
        type: "uint256",
      },
    ],
    name: "getGameCard",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "data",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "utype",
            type: "uint8",
          },
        ],
        internalType: "struct SealedUint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_playerA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_playerB",
        type: "address",
      },
    ],
    name: "getPairGames",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchingGid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerA",
            type: "address",
          },
          {
            internalType: "address",
            name: "playerB",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "accepted",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "pot",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "startingPlayer",
                type: "address",
              },
              {
                internalType: "address",
                name: "activePlayer",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "timeout",
                type: "uint64",
              },
              {
                internalType: "enum Action",
                name: "action1",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action2",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action3",
                type: "uint8",
              },
            ],
            internalType: "struct GameState",
            name: "state",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "cardA",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "cardB",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "winner",
                type: "address",
              },
              {
                internalType: "enum Outcome",
                name: "outcome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "rematchGid",
                type: "uint256",
              },
            ],
            internalType: "struct GameOutcome",
            name: "outcome",
            type: "tuple",
          },
        ],
        internalType: "struct Game[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserGameState",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "rematchingGid",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "playerA",
                type: "address",
              },
              {
                internalType: "address",
                name: "playerB",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "accepted",
                    type: "bool",
                  },
                  {
                    internalType: "uint8",
                    name: "pot",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "startingPlayer",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "activePlayer",
                    type: "address",
                  },
                  {
                    internalType: "uint64",
                    name: "timeout",
                    type: "uint64",
                  },
                  {
                    internalType: "enum Action",
                    name: "action1",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Action",
                    name: "action2",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Action",
                    name: "action3",
                    type: "uint8",
                  },
                ],
                internalType: "struct GameState",
                name: "state",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "gid",
                    type: "uint256",
                  },
                  {
                    internalType: "uint8",
                    name: "cardA",
                    type: "uint8",
                  },
                  {
                    internalType: "uint8",
                    name: "cardB",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "winner",
                    type: "address",
                  },
                  {
                    internalType: "enum Outcome",
                    name: "outcome",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "rematchGid",
                    type: "uint256",
                  },
                ],
                internalType: "struct GameOutcome",
                name: "outcome",
                type: "tuple",
              },
            ],
            internalType: "struct Game",
            name: "game",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "selfChips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "opponentChips",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeGid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchGid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "selfGid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "opponentGid",
            type: "uint256",
          },
        ],
        internalType: "struct FHEKuhnPoker.UserGameState",
        name: "gameState",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserGames",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gid",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rematchingGid",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerA",
            type: "address",
          },
          {
            internalType: "address",
            name: "playerB",
            type: "address",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "accepted",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "pot",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "startingPlayer",
                type: "address",
              },
              {
                internalType: "address",
                name: "activePlayer",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "timeout",
                type: "uint64",
              },
              {
                internalType: "enum Action",
                name: "action1",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action2",
                type: "uint8",
              },
              {
                internalType: "enum Action",
                name: "action3",
                type: "uint8",
              },
            ],
            internalType: "struct GameState",
            name: "state",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "gid",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "cardA",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "cardB",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "winner",
                type: "address",
              },
              {
                internalType: "enum Outcome",
                name: "outcome",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "rematchGid",
                type: "uint256",
              },
            ],
            internalType: "struct GameOutcome",
            name: "outcome",
            type: "tuple",
          },
        ],
        internalType: "struct Game[]",
        name: "ret",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Action",
        name: "action",
        type: "uint8",
      },
    ],
    name: "performAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rematch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timeoutDuration",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeoutOpponent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userActiveGame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040526000600255600380546001600160401b031916607817815562000028906200015a565b6004556200003760026200015a565b6005556200004660016200015a565b6006556000600e553480156200005b57600080fd5b506040805180820182526011815270233432b734bc102832b936b4b9b9b4b7b760791b602080830191909152825180840190935260038352620312e360ec1b9083015290620000ac8260006200016f565b61012052620000bd8160016200016f565b61014052815160208084019190912060e052815190820120610100524660a0526200014b60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052620005a2565b600062000169828280620001a6565b92915050565b60006020835110156200018f5762000187836200023d565b905062000169565b816200019c848262000358565b5060ff9392505050565b60006060608063ba19ac28620001bc8762000289565b86866040518463ffffffff1660e01b8152600401620001de9392919062000478565b600060405180830381865afa158015620001fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002269190810190620004a9565b905062000234816020015190565b95945050505050565b600080829050601f8151111562000274578260405163305a27a960e01b81526004016200026b919062000561565b60405180910390fd5b805162000281826200057d565b179392505050565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002de57607f821691505b602082108103620002ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035357600081815260208120601f850160051c810160208610156200032e5750805b601f850160051c820191505b818110156200034f578281556001016200033a565b5050505b505050565b81516001600160401b03811115620003745762000374620002b3565b6200038c81620003858454620002c9565b8462000305565b602080601f831160018114620003c45760008415620003ab5750858301515b600019600386901b1c1916600185901b1785556200034f565b600085815260208120601f198616915b82811015620003f557888601518255948401946001909101908401620003d4565b5085821015620004145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60005b838110156200044157818101518382015260200162000427565b50506000910152565b600081518084526200046481602086016020860162000424565b601f01601f19169290920160200192915050565b6060815260006200048d60608301866200044a565b905060ff841660208301528260030b6040830152949350505050565b600060208284031215620004bc57600080fd5b81516001600160401b0380821115620004d457600080fd5b818401915084601f830112620004e957600080fd5b815181811115620004fe57620004fe620002b3565b604051601f8201601f19908116603f01168101908382118183101715620005295762000529620002b3565b816040528281528760208487010111156200054357600080fd5b6200055683602083016020880162000424565b979650505050505050565b6020815260006200057660208301846200044a565b9392505050565b80516020808301519190811015620002ff5760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051613ba5620005fd60003960006120b701526000612085015260006128d2015260006128aa015260006128050152600061282f015260006128590152613ba56000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806340d45343116100ad57806385d19e1a1161007157806385d19e1a1461027a578063a2f77bcc146102a5578063d544577d146102c5578063f7669a6a146102cd578063fdcd4c1c146102d557600080fd5b806340d453431461020457806369652fcf1461021757806375f205401461021f5780637d130ac81461023f57806384b0196e1461025f57600080fd5b80632123a0cb116100f45780632123a0cb146101a05780632ee9191d146101c05780632f04c3f4146101d357806333606708146101f35780633a95ae0d146101fc57600080fd5b8063117a5b9014610126578063120aace614610154578063140a2e44146101745780631c9a23371461018b575b600080fd5b6101396101343660046133f6565b6102dd565b60405161014b9695949392919061350e565b60405180910390f35b61016761016236600461356b565b6104a3565b60405161014b91906135dc565b61017d600e5481565b60405190815260200161014b565b61019e61019936600461362b565b610774565b005b6101b36101ae36600461356b565b610931565b60405161014b919061364c565b61019e6101ce3660046133f6565b610dec565b6101e66101e136600461373c565b610e48565b60405161014b919061384c565b61017d60025481565b61019e611195565b610167610212366004613881565b61120f565b61019e611509565b61017d61022d36600461356b565b600b6020526000908152604090205481565b61017d61024d36600461356b565b60076020526000908152604090205481565b6102676115c1565b60405161014b97969594939291906138b4565b60035461028d906001600160401b031681565b6040516001600160401b03909116815260200161014b565b6102b86102b33660046133f6565b611607565b60405161014b919061394a565b61019e611801565b61019e61188e565b61019e611a7a565b6008602090815260009182526040918290208054600182015460028301546003840154865161010080820189526004808801805460ff8082161515865293810484169a85019a909a52620100009099046001600160a01b039081169a84019a909a526005880154808b1660608501526001600160401b03600160a01b82041660808501529699959894861697959093169591939260a0850192600160e01b9004909116908111156103905761039061340f565b60048111156103a1576103a161340f565b815260200160018201601d9054906101000a900460ff1660048111156103c9576103c961340f565b60048111156103da576103da61340f565b815260200160018201601e9054906101000a900460ff1660048111156104025761040261340f565b60048111156104135761041361340f565b9052506040805160c0810182526006840180548252600785015460ff808216602085015261010082048116948401949094526001600160a01b03620100008204166060840152939493919290916080840191600160b01b90910416600581111561047f5761047f61340f565b60058111156104905761049061340f565b8152602001600282015481525050905086565b6001600160a01b0381166000908152600c60205260408120606091906104c890611bd7565b9050806001600160401b038111156104e2576104e26136a7565b60405190808252806020026020018201604052801561051b57816020015b6105086132fb565b8152602001906001900390816105005790505b50915060005b8181101561076d576001600160a01b0384166000908152600c602052604081206008919061054f9084611be7565b81526020808201929092526040908101600020815160c0810183528154815260018201548185015260028201546001600160a01b039081168285015260038301548116606080840191909152845161010081810187526004808701805460ff8082161515865293810484169a85019a909a52620100009099048516978301979097526005860154938416928201929092526001600160401b03600160a01b84041660808281019190915293969495938701949093909260a0850192600160e01b90910416908111156106235761062361340f565b60048111156106345761063461340f565b815260200160018201601d9054906101000a900460ff16600481111561065c5761065c61340f565b600481111561066d5761066d61340f565b815260200160018201601e9054906101000a900460ff1660048111156106955761069561340f565b60048111156106a6576106a661340f565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b90910416600581111561071a5761071a61340f565b600581111561072b5761072b61340f565b81526020016002820154815250508152505083828151811061074f5761074f613959565b6020026020010181905250808061076590613985565b915050610521565b5050919050565b336000908152600b602052604081205490036107a35760405163218286cb60e11b815260040160405180910390fd5b336000908152600b6020908152604080832054835260089091529020600481015460ff166107e457604051633a5f7b5760e01b815260040160405180910390fd5b60006007820154600160b01b900460ff1660058111156108065761080661340f565b14610824576040516308426a3f60e11b815260040160405180910390fd5b60058101546001600160a01b0316331461085157604051631cc191eb60e31b815260040160405180910390fd5b805460405133907fd23f410feb433bf52f5f38608c94bfba4272af89e01381eb029945668cc40d539061088590869061399e565b60405180910390a360006005820154600160e01b900460ff1660048111156108af576108af61340f565b036108c2576108be8183611bfa565b5050565b60026005820154600160e01b900460ff1660048111156108e4576108e461340f565b036108f3576108be8183611c8c565b60006005820154600160e81b900460ff1660048111156109155761091561340f565b03610924576108be8183611d05565b6108be8183611d75565b50565b6109396133b3565b6001600160a01b0382166000818152600b602090815260408083205460a0860190815293835260078252822054908401529051900361097757919050565b60a0808201516000908152600860209081526040808320815160c0810183528154815260018201548185015260028201546001600160a01b039081168285015260038301548116606080840191909152845161010081810187526004808701805460ff8082161515865293810484169a85019a909a52620100009099048516978301979097526005860154938416928201929092526001600160401b03600160a01b84041660808281019190915297989397949694880195909493850192600160e01b900490911690811115610a4f57610a4f61340f565b6004811115610a6057610a6061340f565b815260200160018201601d9054906101000a900460ff166004811115610a8857610a8861340f565b6004811115610a9957610a9961340f565b815260200160018201601e9054906101000a900460ff166004811115610ac157610ac161340f565b6004811115610ad257610ad261340f565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b909104166005811115610b4657610b4661340f565b6005811115610b5757610b5761340f565b81526002919091015460209091015290525060808101515190915015610db95760a0808301516060840181905282820151909101516080840152600090610b9e9085611d9c565b6001600160a01b038082166000818152600b602090815260408083205460c0808b01919091529383526007825280832054898201526060808a015184526008835292819020815194850182528054855260018101548584015260028101548616858301526003810154861685850152815161010081810184526004808401805460ff80821615158652938104841697850197909752620100009096048916948301949094526005830154978816958201959095526001600160401b03600160a01b88041660808281019190915297985094969095908701949360a0850192600160e01b9092041690811115610c9557610c9561340f565b6004811115610ca657610ca661340f565b815260200160018201601d9054906101000a900460ff166004811115610cce57610cce61340f565b6004811115610cdf57610cdf61340f565b815260200160018201601e9054906101000a900460ff166004811115610d0757610d0761340f565b6004811115610d1857610d1861340f565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b909104166005811115610d8c57610d8c61340f565b6005811115610d9d57610d9d61340f565b8152600291909101546020909101529052508352509092915050565b602081015115610de65760208101516060830181905260a08301516080840152600090610b9e9085611d9c565b50919050565b3360009081526007602052604081208054839290610e0b9084906139ac565b909155505060405181815233907fec5c270dc3e37271f6b1ee63cbba191d44debdfe43ef27ebdc3032d2b747e4349060200160405180910390a250565b604080518082019091526060815260006020820152826000610ebe7f6bdaeb2d29561f159c7ef98b16b27015fb2aeb87209c7ee656226d912f59927d8360000151604051602001610ea3929190918252602082015260400190565b60405160208183030381529060405280519060200120611e00565b90506000610ed0828460200151611e2d565b90506001600160a01b0381163314610efb57604051633093a27760e01b815260040160405180910390fd5b84600254811115610f1f576040516357e25a0960e01b815260040160405180910390fd5b6000868152600860209081526040808320815160c0810183528154815260018201548185015260028201546001600160a01b039081168285015260038301548116606080840191909152845161010081810187526004808701805460ff8082161515865293810484169a85019a909a52620100009099048516978301979097526005860154938416928201929092526001600160401b03600160a01b84041660808281019190915293969495938701949093909260a0850192600160e01b9091041690811115610ff157610ff161340f565b60048111156110025761100261340f565b815260200160018201601d9054906101000a900460ff16600481111561102a5761102a61340f565b600481111561103b5761103b61340f565b815260200160018201601e9054906101000a900460ff1660048111156110635761106361340f565b60048111156110745761107461340f565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b9091041660058111156110e8576110e861340f565b60058111156110f9576110f961340f565b81526002919091015460209091015290525060408101519091506001600160a01b0316330361114457875160008881526009602052604090205461113c91611e57565b95505061118b565b60608101516001600160a01b031633036111725787516000888152600a602052604090205461113c91611e57565b6040516339e5f32960e21b815260040160405180910390fd5b5050505092915050565b336000908152600b602052604081205490036111c45760405163218286cb60e11b815260040160405180910390fd5b336000908152600b6020908152604080832054835260089091529020600481015460ff161561120657604051631d8bc98160e21b815260040160405180910390fd5b61092e81611e76565b606060008061121e8585611f30565b6001600160a01b038083166000908152600d6020908152604080832093851683529290529081209294509092509061125590611bd7565b9050806001600160401b0381111561126f5761126f6136a7565b6040519080825280602002602001820160405280156112a857816020015b6112956132fb565b81526020019060019003908161128d5790505b50935060005b8181101561118b576001600160a01b038085166000908152600d602090815260408083209387168352929052908120600891906112eb9084611be7565b81526020808201929092526040908101600020815160c0810183528154815260018201548185015260028201546001600160a01b039081168285015260038301548116606080840191909152845161010081810187526004808701805460ff8082161515865293810484169a85019a909a52620100009099048516978301979097526005860154938416928201929092526001600160401b03600160a01b84041660808281019190915293969495938701949093909260a0850192600160e01b90910416908111156113bf576113bf61340f565b60048111156113d0576113d061340f565b815260200160018201601d9054906101000a900460ff1660048111156113f8576113f861340f565b60048111156114095761140961340f565b815260200160018201601e9054906101000a900460ff1660048111156114315761143161340f565b60048111156114425761144261340f565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b9091041660058111156114b6576114b661340f565b60058111156114c7576114c761340f565b8152602001600282015481525050815250508582815181106114eb576114eb613959565b6020026020010181905250808061150190613985565b9150506112ae565b336000908152600b602052604081205490036115385760405163218286cb60e11b815260040160405180910390fd5b336000908152600b6020908152604080832054835260089091528120906007820154600160b01b900460ff1660058111156115755761157561340f565b14611593576040516308426a3f60e11b815260040160405180910390fd5b600481015460ff166115b857604051633a5f7b5760e01b815260040160405180910390fd5b61092e81611f64565b6000606080600080600060606115d561207e565b6115dd6120b0565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b61160f6132fb565b600082815260086020908152604091829020825160c0810184528154815260018201548184015260028201546001600160a01b039081168286015260038301548116606080840191909152855161010081810188526004808701805460ff80821615158652938104841699850199909952620100009098048516988301989098526005860154938416928201929092526001600160401b03600160a01b840416608082810191909152939694959387019490939260a0850192600160e01b90910416908111156116e1576116e161340f565b60048111156116f2576116f261340f565b815260200160018201601d9054906101000a900460ff16600481111561171a5761171a61340f565b600481111561172b5761172b61340f565b815260200160018201601e9054906101000a900460ff1660048111156117535761175361340f565b60048111156117645761176461340f565b90525081526040805160c0810182526006840180548252600785015460ff80821660208581019190915261010083048216958501959095526001600160a01b036201000083041660608501529390940193919290916080840191600160b01b9091041660058111156117d8576117d861340f565b60058111156117e9576117e961340f565b81526002919091015460209091015290525092915050565b336000908152600b60205260409020541561186057336000908152600b602090815260408083205483526008909152902061183b906120dd565b336000908152600b6020908152604080832054835260089091529020611860906120fc565b600e546000036118725761092e612135565b600e54600090815260086020526040902061188c9061219e565b565b336000908152600b602052604081205490036118bd5760405163218286cb60e11b815260040160405180910390fd5b336000908152600b6020908152604080832054835260089091529020600481015460ff166118fe57604051633a5f7b5760e01b815260040160405180910390fd5b60006007820154600160b01b900460ff1660058111156119205761192061340f565b1461193e576040516308426a3f60e11b815260040160405180910390fd5b6005810154336001600160a01b039091160361196d5760405163cd84c54560e01b815260040160405180910390fd5b6005810154600160a01b90046001600160401b03164210156119a2576040516356795e7160e11b815260040160405180910390fd5b6005810180546001600160a01b0319169055600780820180546201000033810262010000600160b81b031990921691909117600360b01b1791829055600484015491046001600160a01b0316600090815260209290925260408220805460ff61010090930492909216929091611a199084906139ac565b909155505080546007820154600483015460405161010090910460ff168152620100009091046001600160a01b0316907ff2853373dee556a3867a315163b8c1250e471d33af19641542d76e7be76d5b20906020015b60405180910390a350565b336000908152600b60205260408120549003611aa95760405163218286cb60e11b815260040160405180910390fd5b336000908152600b6020908152604080832054835260089091528120906007820154600160b01b900460ff166005811115611ae657611ae661340f565b03611b0457604051638f86c6b360e01b815260040160405180910390fd5b6000611b14826000015433611d9c565b6008830154909150600003611b745781546001600160a01b0382166000908152600b602052604090205414611b5c57604051630741cddb60e11b815260040160405180910390fd5b8154611b689082612243565b60089092019190915550565b60088281015460009081526020919091526040902060046007820154600160b01b900460ff166005811115611bab57611bab61340f565b03611bc957604051633b963c9760e11b815260040160405180910390fd5b611bd2816122c1565b505050565b6000611be1825490565b92915050565b6000611bf38383612367565b9392505050565b60058201805482919060ff60e01b1916600160e01b836004811115611c2157611c2161340f565b02179055506002816004811115611c3a57611c3a61340f565b03611c5157611c4882612391565b6108be8261245c565b6001816004811115611c6557611c6561340f565b03611c73576108be8261245c565b604051634a7f394f60e01b815260040160405180910390fd5b60058201805482919060ff60e81b1916600160e81b836004811115611cb357611cb361340f565b02179055506004816004811115611ccc57611ccc61340f565b03611ce357611cda82612391565b6108be82612503565b6003816004811115611cf757611cf761340f565b03611c73576108be8261267c565b60058201805482919060ff60e81b1916600160e81b836004811115611d2c57611d2c61340f565b02179055506002816004811115611d4557611d4561340f565b03611d5357611c4882612391565b6001816004811115611d6757611d6761340f565b03611c73576108be82612503565b60058201805482919060ff60f01b1916600160f01b836004811115611cb357611cb361340f565b6000828152600860205260408120600201546001600160a01b03838116911614611de0576000838152600860205260409020600201546001600160a01b0316611bf3565b50506000908152600860205260409020600301546001600160a01b031690565b6000611be1611e0d6127f8565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080611e3d8686612923565b925092509250611e4d8282612970565b5090949350505050565b604080518082019091526060815260006020820152611bf38383612a2e565b6007810180546004919060ff60b01b1916600160b01b8302179055506004810154336000908152600760205260408120805461010090930460ff1692909190611ec09084906139ac565b90915550508054336000908152600c60205260409020611edf91612a69565b50336000908152600b6020526040812055600e54815403611f00576000600e555b805460405133907fecf51bb2698f4bba616fb07332e1d861a5430f472e11538556f2823d33ecb15d90600090a350565b600080826001600160a01b0316846001600160a01b03161015611f57575082905081611f5d565b50819050825b9250929050565b600580820180546001600160a01b031916905560078201805460ff60b01b1916600160b01b83021790555060028101546001600160a01b03163314611fb65760028101546001600160a01b0316611fc5565b60038101546001600160a01b03165b6007828101805462010000600160b01b031916620100006001600160a01b039485168102919091179182905560048501549104909216600090815260209190915260408120805461010090930460ff16929091906120249084906139ac565b909155505080546007820154600483015460405161010090910460ff168152620100009091046001600160a01b0316907f147c1b54274befbb22c45bfad77ac0dd59009b6e592020d25e642f5ac2022f0090602001611a6f565b60606120ab7f00000000000000000000000000000000000000000000000000000000000000006000612a75565b905090565b60606120ab7f00000000000000000000000000000000000000000000000000000000000000006001612a75565b80600101546000036120ec5750565b600481015460ff16156112065750565b600481015460ff1661210b5750565b60006007820154600160b01b900460ff16600581111561212d5761212d61340f565b146115b85750565b600061213f612b20565b336000908152600c6020526040902090915061215b9082612b71565b50600e819055336000818152600b6020526040808220849055518392917f306841c3fce8498c2d9b7194b8da4c04d03847394e237b625ce6d029b107f07791a390565b6002810154336001600160a01b03909116036121cd57604051630793469160e51b815260040160405180910390fd5b6121d681612b7d565b8054336000908152600c602052604090206121f091612b71565b506000600e8190558154338252600b602052604090912081905561221390612cb4565b805460405133907fc7f886847371dba98b78e0d0d59e29f4abfaf6e953d6897a761992cb2627e68790600090a350565b600061224d612b20565b60008181526008602090815260408083206001810188905560030180546001600160a01b0319166001600160a01b03881617905533808452600b90925280832084905551929350839290917fbbe33ac9017c7f0d5244dc1f205e11ca9a813daa7c69febfdd87d774f0c7566591a392915050565b6122ca81612b7d565b805460028201546001600160a01b03166000908152600c602052604090206122f191612b71565b50805460038201546001600160a01b03166000908152600c6020526040902061231991612b71565b508054336000908152600b6020526040902081905561233790612cb4565b805460405133907f211b27e39a49d8b83e5e19b450797dee8b5d5a50058b146aa47408a37304129790600090a350565b600082600001828154811061237e5761237e613959565b9060005260206000200154905092915050565b33600090815260076020526040902054600111156123c25760405163103f2c3560e21b815260040160405180910390fd5b3360009081526007602052604081208054600192906123e29084906139bf565b9091555050600481018054600191908290612406908290610100900460ff166139d2565b92506101000a81548160ff021916908360ff1602179055508060000154336001600160a01b03167f7223189244c0c472afd54aec796b8d40651ee7c5b10e8907ace7720cba1448af60405160405180910390a350565b600354612472906001600160401b0316426139eb565b6005820180546001600160401b0392909216600160a01b0267ffffffffffffffff60a01b198316811790915560028301546001600160a01b03918216928216929092179116146124cf5760028101546001600160a01b03166124de565b60038101546001600160a01b03165b60059190910180546001600160a01b0319166001600160a01b03909216919091179055565b6005810180546001600160e01b0319169055805460009081526009602052604090205461252f90612d1f565b60078201805460ff191660ff9290921691909117905580546000908152600a602052604090205461255f90612d1f565b60078201805460ff92831661010090810261ff0019831681179384905592048316918316921691909117116125a15760038101546001600160a01b03166125b0565b60028101546001600160a01b03165b6007828101805462010000600160b01b031916620100006001600160a01b039485168102919091179182905560048501549104909216600090815260209190915260408120805461010090930460ff169290919061260f9084906139ac565b909155505060078101805460ff60b01b1916600160b01b17908190558154600483015460405161010090910460ff16815290916201000090046001600160a01b0316907f6b3f6c5f959ad5b6826509086e36a0928378a8b8cc000b7d9789a774fda2f00390602001611a6f565b6005810180546001600160e01b031916905580546000908152600960205260409020546126a890612d1f565b60078201805460ff191660ff9290921691909117905580546000908152600a60205260409020546126d890612d1f565b60078201805461ff00191661010060ff939093169290920291909117905560028101546001600160a01b0316331461271d5760028101546001600160a01b031661272c565b60038101546001600160a01b03165b6007828101805462010000600160b01b031916620100006001600160a01b039485168102919091179182905560048501549104909216600090815260209190915260408120805461010090930460ff169290919061278b9084906139ac565b909155505060078101805460ff60b01b1916600160b11b17908190558154600483015460405161010090910460ff16815290916201000090046001600160a01b0316907f398f5677dc9617d4ce2fe16114560f1b001e5ab80a5185c3a6ad3e285864dc1b90602001611a6f565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561285157507f000000000000000000000000000000000000000000000000000000000000000046145b1561287b57507f000000000000000000000000000000000000000000000000000000000000000090565b6120ab604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000806000835160410361295d5760208401516040850151606086015160001a61294f88828585612d2a565b955095509550505050612969565b50508151600091506002905b9250925092565b60008260038111156129845761298461340f565b0361298d575050565b60018260038111156129a1576129a161340f565b036129bf5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156129d3576129d361340f565b036129f95760405163fce698f760e01b8152600481018290526024015b60405180910390fd5b6003826003811115612a0d57612a0d61340f565b036108be576040516335e2f38360e21b8152600481018290526024016129f0565b6040805180820190915260608152600060208201526040518060400160405280612a588585612df9565b815260006020909101529392505050565b6000611bf38383612e22565b606060ff8314612a8f57612a8883612f1c565b9050611be1565b818054612a9b90613a0b565b80601f0160208091040260200160405190810160405280929190818152602001828054612ac790613a0b565b8015612b145780601f10612ae957610100808354040283529160200191612b14565b820191906000526020600020905b815481529060010190602001808311612af757829003601f168201915b50505050509050611be1565b6000600160026000828254612b3591906139ac565b909155505060028054600081815260086020526040902090815590810180546001600160a01b03191633179055612b6b81612391565b54919050565b6000611bf38383612f5b565b612b8681612391565b60048101805460ff19166001179055600380820180546001600160a01b0319163317905554612bbe906001600160401b0316426139eb565b600582018054600284015460048501805462010000600160b01b0319166001600160a01b039283166201000090810291909117918290559004166001600160e01b03199091166001600160401b0393909316600160a01b026001600160a01b03191692909217919091179055600080612c376080612faa565b9050612c4e60045482612fb890919063ffffffff16565b8354600090815260096020526040812091909155600654600554612c879190612c8190612c7b602d612faa565b90612fb8565b90612fc4565b600454909150612c9b90612c7b8484612fc4565b93546000908152600a6020526040902093909355505050565b600081815260086020526040812060028101546003909101548291612ce5916001600160a01b039182169116611f30565b6001600160a01b038083166000908152600d602090815260408083209385168352929052209193509150612d199084612b71565b50505050565b6000611be182612fd0565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115612d655750600091506003905082612def565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015612db9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612de557506000925060019150829050612def565b9250600091508190505b9450945094915050565b606082612e0d57612e0a6000612faa565b92505b82612e1a60008285612fdd565b949350505050565b60008181526001830160205260408120548015612f0b576000612e466001836139bf565b8554909150600090612e5a906001906139bf565b9050808214612ebf576000866000018281548110612e7a57612e7a613959565b9060005260206000200154905080876000018481548110612e9d57612e9d613959565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612ed057612ed0613a3f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611be1565b6000915050611be1565b5092915050565b60606000612f298361306e565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000818152600183016020526040812054612fa257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611be1565b506000611be1565b6000611be182600080613096565b6000611bf38383613125565b6000611bf3838361316b565b6000611be18260806131a6565b6060608063a1848ff385612ff086613248565b6040805160208101889052016040516020818303038152906040526040518463ffffffff1660e01b815260040161302993929190613a55565b600060405180830381865afa158015613046573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612e1a9190810190613ab3565b600060ff8216601f811115611be157604051632cd44ac360e21b815260040160405180910390fd5b60006060608063ba19ac286130aa87613248565b86866040518463ffffffff1660e01b81526004016130ca93929190613afb565b600060405180830381865afa1580156130e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261310f9190810190613ab3565b905061311c816020015190565b95945050505050565b600082613139576131366000612faa565b92505b8161314b576131486000612faa565b91505b82826000613161818484608063eb376804613272565b9695505050505050565b60008261317f5761317c6000612faa565b92505b816131915761318e6000612faa565b91505b828260006131618184846080622df619613272565b6000826131ba576131b76000612faa565b92505b60ff82168360006131ca82613248565b604051637c4697ab60e01b8152909150600090608090637c4697ab906131f890849086908990600401613b2a565b602060405180830381865afa158015613215573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132399190613b56565b9050805b979650505050505050565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b6000606083838861328289613248565b61328b89613248565b6040518463ffffffff1660e01b81526004016132a993929190613a55565b600060405180830381865afa1580156132c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526132ee9190810190613ab3565b905061323d816020015190565b6040518060c00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200161337b604080516101008101825260008082526020820181905291810182905260608101829052608081018290529060a08201908152602001600081526020016000905290565b81526040805160c08101825260008082526020828101829052928201819052606082018190526080820181905260a082015291015290565b6040518060e001604052806133c66132fb565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006020828403121561340857600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600581106134355761343561340f565b9052565b80511515825260ff6020820151166020830152604081015160018060a01b03808216604085015280606084015116606085015250506001600160401b03608082015116608083015260a081015161349360a0840182613425565b5060c08101516134a660c0840182613425565b5060e0810151611bd260e0840182613425565b8051825260ff602082015116602083015260ff604082015116604083015260018060a01b0360608201511660608301526080810151600681106134fe576134fe61340f565b608083015260a090810151910152565b868152602081018690526001600160a01b0385811660408301528416606082015261024081016135416080830185613439565b61323d6101808301846134b9565b80356001600160a01b038116811461356657600080fd5b919050565b60006020828403121561357d57600080fd5b611bf38261354f565b8051825260208101516020830152604081015160018060a01b038082166040850152806060840151166060850152505060808101516135c86080840182613439565b5060a0810151611bd26101808401826134b9565b6020808252825182820181905260009190848201906040850190845b8181101561361f5761360b838551613586565b9284019261024092909201916001016135f8565b50909695505050505050565b60006020828403121561363d57600080fd5b813560058110611bf357600080fd5b600061030082019050613660828451613586565b60208301516102408301526040830151610260830152606083015161028083015260808301516102a083015260a08301516102c083015260c0909201516102e09091015290565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156136df576136df6136a7565b60405290565b604051601f8201601f191681016001600160401b038111828210171561370d5761370d6136a7565b604052919050565b60006001600160401b0382111561372e5761372e6136a7565b50601f01601f191660200190565b6000806040838503121561374f57600080fd5b82356001600160401b038082111561376657600080fd5b908401906040828703121561377a57600080fd5b6137826136bd565b823581526020808401358381111561379957600080fd5b80850194505087601f8501126137ae57600080fd5b833592506137c36137be84613715565b6136e5565b83815288828587010111156137d757600080fd5b8382860183830137600093810182019390935281810192909252969401359450505050565b60005b838110156138175781810151838201526020016137ff565b50506000910152565b600081518084526138388160208601602086016137fc565b601f01601f19169290920160200192915050565b6020815260008251604060208401526138686060840182613820565b905060ff60208501511660408401528091505092915050565b6000806040838503121561389457600080fd5b61389d8361354f565b91506138ab6020840161354f565b90509250929050565b60ff60f81b881681526000602060e0818401526138d460e084018a613820565b83810360408501526138e6818a613820565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156139385783518352928401929184019160010161391c565b50909c9b505050505050505050505050565b6102408101611be18284613586565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016139975761399761396f565b5060010190565b60208101611be18284613425565b80820180821115611be157611be161396f565b81810381811115611be157611be161396f565b60ff8181168382160190811115611be157611be161396f565b6001600160401b03818116838216019080821115612f1557612f1561396f565b600181811c90821680613a1f57607f821691505b602082108103610de657634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60ff84168152606060208201526000613a716060830185613820565b82810360408401526131618185613820565b6000613a916137be84613715565b9050828152838383011115613aa557600080fd5b611bf38360208301846137fc565b600060208284031215613ac557600080fd5b81516001600160401b03811115613adb57600080fd5b8201601f81018413613aec57600080fd5b612e1a84825160208401613a83565b606081526000613b0e6060830186613820565b905060ff841660208301528260030b6040830152949350505050565b60ff84168152606060208201526000613b466060830185613820565b9050826040830152949350505050565b600060208284031215613b6857600080fd5b505191905056fea2646970667358221220a63ddeb12e272c7d0fd8511609d118d21adf1ca0c6a64acde714595a5137214464736f6c63430008140033";

type FHEKuhnPokerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEKuhnPokerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEKuhnPoker__factory extends ContractFactory {
  constructor(...args: FHEKuhnPokerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHEKuhnPoker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEKuhnPoker__factory {
    return super.connect(runner) as FHEKuhnPoker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEKuhnPokerInterface {
    return new Interface(_abi) as FHEKuhnPokerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FHEKuhnPoker {
    return new Contract(address, _abi, runner) as unknown as FHEKuhnPoker;
  }
}
